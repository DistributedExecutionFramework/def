/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package at.enfilo.def.reducer.api.dto;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-06")
public class WorkerTasksDTO implements org.apache.thrift.TBase<WorkerTasksDTO, WorkerTasksDTO._Fields>, java.io.Serializable, Cloneable, Comparable<WorkerTasksDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WorkerTasksDTO");

  private static final org.apache.thrift.protocol.TField WORKER_ENDPOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("workerEndpoint", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField T_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("tIds", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WorkerTasksDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WorkerTasksDTOTupleSchemeFactory();

  public at.enfilo.def.communication.dto.ServiceEndpointDTO workerEndpoint; // required
  public java.util.List<java.lang.String> tIds; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    WORKER_ENDPOINT((short)1, "workerEndpoint"),
    T_IDS((short)2, "tIds");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // WORKER_ENDPOINT
          return WORKER_ENDPOINT;
        case 2: // T_IDS
          return T_IDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.WORKER_ENDPOINT, new org.apache.thrift.meta_data.FieldMetaData("workerEndpoint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, at.enfilo.def.communication.dto.ServiceEndpointDTO.class)));
    tmpMap.put(_Fields.T_IDS, new org.apache.thrift.meta_data.FieldMetaData("tIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , "Id"))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WorkerTasksDTO.class, metaDataMap);
  }

  public WorkerTasksDTO() {
  }

  public WorkerTasksDTO(
    at.enfilo.def.communication.dto.ServiceEndpointDTO workerEndpoint,
    java.util.List<java.lang.String> tIds)
  {
    this();
    this.workerEndpoint = workerEndpoint;
    this.tIds = tIds;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WorkerTasksDTO(WorkerTasksDTO other) {
    if (other.isSetWorkerEndpoint()) {
      this.workerEndpoint = new at.enfilo.def.communication.dto.ServiceEndpointDTO(other.workerEndpoint);
    }
    if (other.isSetTIds()) {
      java.util.List<java.lang.String> __this__tIds = new java.util.ArrayList<java.lang.String>(other.tIds.size());
      for (java.lang.String other_element : other.tIds) {
        __this__tIds.add(other_element);
      }
      this.tIds = __this__tIds;
    }
  }

  public WorkerTasksDTO deepCopy() {
    return new WorkerTasksDTO(this);
  }

  @Override
  public void clear() {
    this.workerEndpoint = null;
    this.tIds = null;
  }

  public at.enfilo.def.communication.dto.ServiceEndpointDTO getWorkerEndpoint() {
    return this.workerEndpoint;
  }

  public WorkerTasksDTO setWorkerEndpoint(at.enfilo.def.communication.dto.ServiceEndpointDTO workerEndpoint) {
    this.workerEndpoint = workerEndpoint;
    return this;
  }

  public void unsetWorkerEndpoint() {
    this.workerEndpoint = null;
  }

  /** Returns true if field workerEndpoint is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkerEndpoint() {
    return this.workerEndpoint != null;
  }

  public void setWorkerEndpointIsSet(boolean value) {
    if (!value) {
      this.workerEndpoint = null;
    }
  }

  public int getTIdsSize() {
    return (this.tIds == null) ? 0 : this.tIds.size();
  }

  public java.util.Iterator<java.lang.String> getTIdsIterator() {
    return (this.tIds == null) ? null : this.tIds.iterator();
  }

  public void addToTIds(java.lang.String elem) {
    if (this.tIds == null) {
      this.tIds = new java.util.ArrayList<java.lang.String>();
    }
    this.tIds.add(elem);
  }

  public java.util.List<java.lang.String> getTIds() {
    return this.tIds;
  }

  public WorkerTasksDTO setTIds(java.util.List<java.lang.String> tIds) {
    this.tIds = tIds;
    return this;
  }

  public void unsetTIds() {
    this.tIds = null;
  }

  /** Returns true if field tIds is set (has been assigned a value) and false otherwise */
  public boolean isSetTIds() {
    return this.tIds != null;
  }

  public void setTIdsIsSet(boolean value) {
    if (!value) {
      this.tIds = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case WORKER_ENDPOINT:
      if (value == null) {
        unsetWorkerEndpoint();
      } else {
        setWorkerEndpoint((at.enfilo.def.communication.dto.ServiceEndpointDTO)value);
      }
      break;

    case T_IDS:
      if (value == null) {
        unsetTIds();
      } else {
        setTIds((java.util.List<java.lang.String>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case WORKER_ENDPOINT:
      return getWorkerEndpoint();

    case T_IDS:
      return getTIds();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case WORKER_ENDPOINT:
      return isSetWorkerEndpoint();
    case T_IDS:
      return isSetTIds();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WorkerTasksDTO)
      return this.equals((WorkerTasksDTO)that);
    return false;
  }

  public boolean equals(WorkerTasksDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_workerEndpoint = true && this.isSetWorkerEndpoint();
    boolean that_present_workerEndpoint = true && that.isSetWorkerEndpoint();
    if (this_present_workerEndpoint || that_present_workerEndpoint) {
      if (!(this_present_workerEndpoint && that_present_workerEndpoint))
        return false;
      if (!this.workerEndpoint.equals(that.workerEndpoint))
        return false;
    }

    boolean this_present_tIds = true && this.isSetTIds();
    boolean that_present_tIds = true && that.isSetTIds();
    if (this_present_tIds || that_present_tIds) {
      if (!(this_present_tIds && that_present_tIds))
        return false;
      if (!this.tIds.equals(that.tIds))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetWorkerEndpoint()) ? 131071 : 524287);
    if (isSetWorkerEndpoint())
      hashCode = hashCode * 8191 + workerEndpoint.hashCode();

    hashCode = hashCode * 8191 + ((isSetTIds()) ? 131071 : 524287);
    if (isSetTIds())
      hashCode = hashCode * 8191 + tIds.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WorkerTasksDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetWorkerEndpoint()).compareTo(other.isSetWorkerEndpoint());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkerEndpoint()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workerEndpoint, other.workerEndpoint);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTIds()).compareTo(other.isSetTIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tIds, other.tIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WorkerTasksDTO(");
    boolean first = true;

    sb.append("workerEndpoint:");
    if (this.workerEndpoint == null) {
      sb.append("null");
    } else {
      sb.append(this.workerEndpoint);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tIds:");
    if (this.tIds == null) {
      sb.append("null");
    } else {
      sb.append(this.tIds);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (workerEndpoint != null) {
      workerEndpoint.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WorkerTasksDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WorkerTasksDTOStandardScheme getScheme() {
      return new WorkerTasksDTOStandardScheme();
    }
  }

  private static class WorkerTasksDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<WorkerTasksDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WorkerTasksDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // WORKER_ENDPOINT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.workerEndpoint = new at.enfilo.def.communication.dto.ServiceEndpointDTO();
              struct.workerEndpoint.read(iprot);
              struct.setWorkerEndpointIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // T_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.tIds = new java.util.ArrayList<java.lang.String>(_list0.size);
                java.lang.String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.tIds.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setTIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WorkerTasksDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.workerEndpoint != null) {
        oprot.writeFieldBegin(WORKER_ENDPOINT_FIELD_DESC);
        struct.workerEndpoint.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.tIds != null) {
        oprot.writeFieldBegin(T_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.tIds.size()));
          for (java.lang.String _iter3 : struct.tIds)
          {
            oprot.writeString(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WorkerTasksDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WorkerTasksDTOTupleScheme getScheme() {
      return new WorkerTasksDTOTupleScheme();
    }
  }

  private static class WorkerTasksDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<WorkerTasksDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WorkerTasksDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetWorkerEndpoint()) {
        optionals.set(0);
      }
      if (struct.isSetTIds()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetWorkerEndpoint()) {
        struct.workerEndpoint.write(oprot);
      }
      if (struct.isSetTIds()) {
        {
          oprot.writeI32(struct.tIds.size());
          for (java.lang.String _iter4 : struct.tIds)
          {
            oprot.writeString(_iter4);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WorkerTasksDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.workerEndpoint = new at.enfilo.def.communication.dto.ServiceEndpointDTO();
        struct.workerEndpoint.read(iprot);
        struct.setWorkerEndpointIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.tIds = new java.util.ArrayList<java.lang.String>(_list5.size);
          java.lang.String _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readString();
            struct.tIds.add(_elem6);
          }
        }
        struct.setTIdsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

