/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package at.enfilo.def.transfer.dto;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-08-13")
@JsonIgnoreProperties(ignoreUnknown = true)
public class JobDTO implements org.apache.thrift.TBase<JobDTO, JobDTO._Fields>, java.io.Serializable, Cloneable, Comparable<JobDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobDTO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PROGRAM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("programId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField FINISH_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("finishTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField SCHEDULED_TASKS_FIELD_DESC = new org.apache.thrift.protocol.TField("scheduledTasks", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField RUNNING_TASKS_FIELD_DESC = new org.apache.thrift.protocol.TField("runningTasks", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SUCCESSFUL_TASKS_FIELD_DESC = new org.apache.thrift.protocol.TField("successfulTasks", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField FAILED_TASKS_FIELD_DESC = new org.apache.thrift.protocol.TField("failedTasks", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField MAP_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("mapRoutineId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField REDUCE_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("reduceRoutineId", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField REDUCED_RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("reducedResults", org.apache.thrift.protocol.TType.LIST, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobDTOTupleSchemeFactory();

  private java.lang.String id; // required
  private java.lang.String programId; // required
  private ExecutionState state; // required
  private long createTime; // required
  private long startTime; // required
  private long finishTime; // required
  private int scheduledTasks; // required
  private int runningTasks; // required
  private int successfulTasks; // required
  private int failedTasks; // required
  private java.lang.String mapRoutineId; // required
  private java.lang.String reduceRoutineId; // optional
  private java.util.List<ResourceDTO> reducedResults; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PROGRAM_ID((short)2, "programId"),
    /**
     * 
     * @see ExecutionState
     */
    STATE((short)3, "state"),
    CREATE_TIME((short)4, "createTime"),
    START_TIME((short)5, "startTime"),
    FINISH_TIME((short)6, "finishTime"),
    SCHEDULED_TASKS((short)7, "scheduledTasks"),
    RUNNING_TASKS((short)8, "runningTasks"),
    SUCCESSFUL_TASKS((short)9, "successfulTasks"),
    FAILED_TASKS((short)10, "failedTasks"),
    MAP_ROUTINE_ID((short)11, "mapRoutineId"),
    REDUCE_ROUTINE_ID((short)12, "reduceRoutineId"),
    REDUCED_RESULTS((short)13, "reducedResults");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PROGRAM_ID
          return PROGRAM_ID;
        case 3: // STATE
          return STATE;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // START_TIME
          return START_TIME;
        case 6: // FINISH_TIME
          return FINISH_TIME;
        case 7: // SCHEDULED_TASKS
          return SCHEDULED_TASKS;
        case 8: // RUNNING_TASKS
          return RUNNING_TASKS;
        case 9: // SUCCESSFUL_TASKS
          return SUCCESSFUL_TASKS;
        case 10: // FAILED_TASKS
          return FAILED_TASKS;
        case 11: // MAP_ROUTINE_ID
          return MAP_ROUTINE_ID;
        case 12: // REDUCE_ROUTINE_ID
          return REDUCE_ROUTINE_ID;
        case 13: // REDUCED_RESULTS
          return REDUCED_RESULTS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __STARTTIME_ISSET_ID = 1;
  private static final int __FINISHTIME_ISSET_ID = 2;
  private static final int __SCHEDULEDTASKS_ISSET_ID = 3;
  private static final int __RUNNINGTASKS_ISSET_ID = 4;
  private static final int __SUCCESSFULTASKS_ISSET_ID = 5;
  private static final int __FAILEDTASKS_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.REDUCE_ROUTINE_ID,_Fields.REDUCED_RESULTS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.PROGRAM_ID, new org.apache.thrift.meta_data.FieldMetaData("programId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ExecutionState.class)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FINISH_TIME, new org.apache.thrift.meta_data.FieldMetaData("finishTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SCHEDULED_TASKS, new org.apache.thrift.meta_data.FieldMetaData("scheduledTasks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RUNNING_TASKS, new org.apache.thrift.meta_data.FieldMetaData("runningTasks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SUCCESSFUL_TASKS, new org.apache.thrift.meta_data.FieldMetaData("successfulTasks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FAILED_TASKS, new org.apache.thrift.meta_data.FieldMetaData("failedTasks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAP_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("mapRoutineId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.REDUCE_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("reduceRoutineId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.REDUCED_RESULTS, new org.apache.thrift.meta_data.FieldMetaData("reducedResults", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ResourceDTO"))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobDTO.class, metaDataMap);
  }

  public JobDTO() {
  }

  public JobDTO(
    java.lang.String id,
    java.lang.String programId,
    ExecutionState state,
    long createTime,
    long startTime,
    long finishTime,
    int scheduledTasks,
    int runningTasks,
    int successfulTasks,
    int failedTasks,
    java.lang.String mapRoutineId)
  {
    this();
    this.id = id;
    this.programId = programId;
    this.state = state;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.finishTime = finishTime;
    setFinishTimeIsSet(true);
    this.scheduledTasks = scheduledTasks;
    setScheduledTasksIsSet(true);
    this.runningTasks = runningTasks;
    setRunningTasksIsSet(true);
    this.successfulTasks = successfulTasks;
    setSuccessfulTasksIsSet(true);
    this.failedTasks = failedTasks;
    setFailedTasksIsSet(true);
    this.mapRoutineId = mapRoutineId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobDTO(JobDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetProgramId()) {
      this.programId = other.programId;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
    this.createTime = other.createTime;
    this.startTime = other.startTime;
    this.finishTime = other.finishTime;
    this.scheduledTasks = other.scheduledTasks;
    this.runningTasks = other.runningTasks;
    this.successfulTasks = other.successfulTasks;
    this.failedTasks = other.failedTasks;
    if (other.isSetMapRoutineId()) {
      this.mapRoutineId = other.mapRoutineId;
    }
    if (other.isSetReduceRoutineId()) {
      this.reduceRoutineId = other.reduceRoutineId;
    }
    if (other.isSetReducedResults()) {
      java.util.List<ResourceDTO> __this__reducedResults = new java.util.ArrayList<ResourceDTO>(other.reducedResults.size());
      for (ResourceDTO other_element : other.reducedResults) {
        __this__reducedResults.add(new ResourceDTO(other_element));
      }
      this.reducedResults = __this__reducedResults;
    }
  }

  public JobDTO deepCopy() {
    return new JobDTO(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.programId = null;
    this.state = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setFinishTimeIsSet(false);
    this.finishTime = 0;
    setScheduledTasksIsSet(false);
    this.scheduledTasks = 0;
    setRunningTasksIsSet(false);
    this.runningTasks = 0;
    setSuccessfulTasksIsSet(false);
    this.successfulTasks = 0;
    setFailedTasksIsSet(false);
    this.failedTasks = 0;
    this.mapRoutineId = null;
    this.reduceRoutineId = null;
    this.reducedResults = null;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public void setId(java.lang.String id) {
    this.id = id;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getProgramId() {
    return this.programId;
  }

  public void setProgramId(java.lang.String programId) {
    this.programId = programId;
  }

  public void unsetProgramId() {
    this.programId = null;
  }

  /** Returns true if field programId is set (has been assigned a value) and false otherwise */
  public boolean isSetProgramId() {
    return this.programId != null;
  }

  public void setProgramIdIsSet(boolean value) {
    if (!value) {
      this.programId = null;
    }
  }

  /**
   * 
   * @see ExecutionState
   */
  public ExecutionState getState() {
    return this.state;
  }

  /**
   * 
   * @see ExecutionState
   */
  public void setState(ExecutionState state) {
    this.state = state;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public void setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
  }

  public void unsetCreateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public long getStartTime() {
    return this.startTime;
  }

  public void setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public long getFinishTime() {
    return this.finishTime;
  }

  public void setFinishTime(long finishTime) {
    this.finishTime = finishTime;
    setFinishTimeIsSet(true);
  }

  public void unsetFinishTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FINISHTIME_ISSET_ID);
  }

  /** Returns true if field finishTime is set (has been assigned a value) and false otherwise */
  public boolean isSetFinishTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FINISHTIME_ISSET_ID);
  }

  public void setFinishTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FINISHTIME_ISSET_ID, value);
  }

  public int getScheduledTasks() {
    return this.scheduledTasks;
  }

  public void setScheduledTasks(int scheduledTasks) {
    this.scheduledTasks = scheduledTasks;
    setScheduledTasksIsSet(true);
  }

  public void unsetScheduledTasks() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SCHEDULEDTASKS_ISSET_ID);
  }

  /** Returns true if field scheduledTasks is set (has been assigned a value) and false otherwise */
  public boolean isSetScheduledTasks() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SCHEDULEDTASKS_ISSET_ID);
  }

  public void setScheduledTasksIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SCHEDULEDTASKS_ISSET_ID, value);
  }

  public int getRunningTasks() {
    return this.runningTasks;
  }

  public void setRunningTasks(int runningTasks) {
    this.runningTasks = runningTasks;
    setRunningTasksIsSet(true);
  }

  public void unsetRunningTasks() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RUNNINGTASKS_ISSET_ID);
  }

  /** Returns true if field runningTasks is set (has been assigned a value) and false otherwise */
  public boolean isSetRunningTasks() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RUNNINGTASKS_ISSET_ID);
  }

  public void setRunningTasksIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RUNNINGTASKS_ISSET_ID, value);
  }

  public int getSuccessfulTasks() {
    return this.successfulTasks;
  }

  public void setSuccessfulTasks(int successfulTasks) {
    this.successfulTasks = successfulTasks;
    setSuccessfulTasksIsSet(true);
  }

  public void unsetSuccessfulTasks() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESSFULTASKS_ISSET_ID);
  }

  /** Returns true if field successfulTasks is set (has been assigned a value) and false otherwise */
  public boolean isSetSuccessfulTasks() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESSFULTASKS_ISSET_ID);
  }

  public void setSuccessfulTasksIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESSFULTASKS_ISSET_ID, value);
  }

  public int getFailedTasks() {
    return this.failedTasks;
  }

  public void setFailedTasks(int failedTasks) {
    this.failedTasks = failedTasks;
    setFailedTasksIsSet(true);
  }

  public void unsetFailedTasks() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FAILEDTASKS_ISSET_ID);
  }

  /** Returns true if field failedTasks is set (has been assigned a value) and false otherwise */
  public boolean isSetFailedTasks() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FAILEDTASKS_ISSET_ID);
  }

  public void setFailedTasksIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FAILEDTASKS_ISSET_ID, value);
  }

  public java.lang.String getMapRoutineId() {
    return this.mapRoutineId;
  }

  public void setMapRoutineId(java.lang.String mapRoutineId) {
    this.mapRoutineId = mapRoutineId;
  }

  public void unsetMapRoutineId() {
    this.mapRoutineId = null;
  }

  /** Returns true if field mapRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetMapRoutineId() {
    return this.mapRoutineId != null;
  }

  public void setMapRoutineIdIsSet(boolean value) {
    if (!value) {
      this.mapRoutineId = null;
    }
  }

  public java.lang.String getReduceRoutineId() {
    return this.reduceRoutineId;
  }

  public void setReduceRoutineId(java.lang.String reduceRoutineId) {
    this.reduceRoutineId = reduceRoutineId;
  }

  public void unsetReduceRoutineId() {
    this.reduceRoutineId = null;
  }

  /** Returns true if field reduceRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetReduceRoutineId() {
    return this.reduceRoutineId != null;
  }

  public void setReduceRoutineIdIsSet(boolean value) {
    if (!value) {
      this.reduceRoutineId = null;
    }
  }

  public int getReducedResultsSize() {
    return (this.reducedResults == null) ? 0 : this.reducedResults.size();
  }

  public java.util.Iterator<ResourceDTO> getReducedResultsIterator() {
    return (this.reducedResults == null) ? null : this.reducedResults.iterator();
  }

  public void addToReducedResults(ResourceDTO elem) {
    if (this.reducedResults == null) {
      this.reducedResults = new java.util.ArrayList<ResourceDTO>();
    }
    this.reducedResults.add(elem);
  }

  public java.util.List<ResourceDTO> getReducedResults() {
    return this.reducedResults;
  }

  public void setReducedResults(java.util.List<ResourceDTO> reducedResults) {
    this.reducedResults = reducedResults;
  }

  public void unsetReducedResults() {
    this.reducedResults = null;
  }

  /** Returns true if field reducedResults is set (has been assigned a value) and false otherwise */
  public boolean isSetReducedResults() {
    return this.reducedResults != null;
  }

  public void setReducedResultsIsSet(boolean value) {
    if (!value) {
      this.reducedResults = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case PROGRAM_ID:
      if (value == null) {
        unsetProgramId();
      } else {
        setProgramId((java.lang.String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((ExecutionState)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.Long)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case FINISH_TIME:
      if (value == null) {
        unsetFinishTime();
      } else {
        setFinishTime((java.lang.Long)value);
      }
      break;

    case SCHEDULED_TASKS:
      if (value == null) {
        unsetScheduledTasks();
      } else {
        setScheduledTasks((java.lang.Integer)value);
      }
      break;

    case RUNNING_TASKS:
      if (value == null) {
        unsetRunningTasks();
      } else {
        setRunningTasks((java.lang.Integer)value);
      }
      break;

    case SUCCESSFUL_TASKS:
      if (value == null) {
        unsetSuccessfulTasks();
      } else {
        setSuccessfulTasks((java.lang.Integer)value);
      }
      break;

    case FAILED_TASKS:
      if (value == null) {
        unsetFailedTasks();
      } else {
        setFailedTasks((java.lang.Integer)value);
      }
      break;

    case MAP_ROUTINE_ID:
      if (value == null) {
        unsetMapRoutineId();
      } else {
        setMapRoutineId((java.lang.String)value);
      }
      break;

    case REDUCE_ROUTINE_ID:
      if (value == null) {
        unsetReduceRoutineId();
      } else {
        setReduceRoutineId((java.lang.String)value);
      }
      break;

    case REDUCED_RESULTS:
      if (value == null) {
        unsetReducedResults();
      } else {
        setReducedResults((java.util.List<ResourceDTO>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case PROGRAM_ID:
      return getProgramId();

    case STATE:
      return getState();

    case CREATE_TIME:
      return getCreateTime();

    case START_TIME:
      return getStartTime();

    case FINISH_TIME:
      return getFinishTime();

    case SCHEDULED_TASKS:
      return getScheduledTasks();

    case RUNNING_TASKS:
      return getRunningTasks();

    case SUCCESSFUL_TASKS:
      return getSuccessfulTasks();

    case FAILED_TASKS:
      return getFailedTasks();

    case MAP_ROUTINE_ID:
      return getMapRoutineId();

    case REDUCE_ROUTINE_ID:
      return getReduceRoutineId();

    case REDUCED_RESULTS:
      return getReducedResults();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PROGRAM_ID:
      return isSetProgramId();
    case STATE:
      return isSetState();
    case CREATE_TIME:
      return isSetCreateTime();
    case START_TIME:
      return isSetStartTime();
    case FINISH_TIME:
      return isSetFinishTime();
    case SCHEDULED_TASKS:
      return isSetScheduledTasks();
    case RUNNING_TASKS:
      return isSetRunningTasks();
    case SUCCESSFUL_TASKS:
      return isSetSuccessfulTasks();
    case FAILED_TASKS:
      return isSetFailedTasks();
    case MAP_ROUTINE_ID:
      return isSetMapRoutineId();
    case REDUCE_ROUTINE_ID:
      return isSetReduceRoutineId();
    case REDUCED_RESULTS:
      return isSetReducedResults();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof JobDTO)
      return this.equals((JobDTO)that);
    return false;
  }

  public boolean equals(JobDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_programId = true && this.isSetProgramId();
    boolean that_present_programId = true && that.isSetProgramId();
    if (this_present_programId || that_present_programId) {
      if (!(this_present_programId && that_present_programId))
        return false;
      if (!this.programId.equals(that.programId))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_finishTime = true;
    boolean that_present_finishTime = true;
    if (this_present_finishTime || that_present_finishTime) {
      if (!(this_present_finishTime && that_present_finishTime))
        return false;
      if (this.finishTime != that.finishTime)
        return false;
    }

    boolean this_present_scheduledTasks = true;
    boolean that_present_scheduledTasks = true;
    if (this_present_scheduledTasks || that_present_scheduledTasks) {
      if (!(this_present_scheduledTasks && that_present_scheduledTasks))
        return false;
      if (this.scheduledTasks != that.scheduledTasks)
        return false;
    }

    boolean this_present_runningTasks = true;
    boolean that_present_runningTasks = true;
    if (this_present_runningTasks || that_present_runningTasks) {
      if (!(this_present_runningTasks && that_present_runningTasks))
        return false;
      if (this.runningTasks != that.runningTasks)
        return false;
    }

    boolean this_present_successfulTasks = true;
    boolean that_present_successfulTasks = true;
    if (this_present_successfulTasks || that_present_successfulTasks) {
      if (!(this_present_successfulTasks && that_present_successfulTasks))
        return false;
      if (this.successfulTasks != that.successfulTasks)
        return false;
    }

    boolean this_present_failedTasks = true;
    boolean that_present_failedTasks = true;
    if (this_present_failedTasks || that_present_failedTasks) {
      if (!(this_present_failedTasks && that_present_failedTasks))
        return false;
      if (this.failedTasks != that.failedTasks)
        return false;
    }

    boolean this_present_mapRoutineId = true && this.isSetMapRoutineId();
    boolean that_present_mapRoutineId = true && that.isSetMapRoutineId();
    if (this_present_mapRoutineId || that_present_mapRoutineId) {
      if (!(this_present_mapRoutineId && that_present_mapRoutineId))
        return false;
      if (!this.mapRoutineId.equals(that.mapRoutineId))
        return false;
    }

    boolean this_present_reduceRoutineId = true && this.isSetReduceRoutineId();
    boolean that_present_reduceRoutineId = true && that.isSetReduceRoutineId();
    if (this_present_reduceRoutineId || that_present_reduceRoutineId) {
      if (!(this_present_reduceRoutineId && that_present_reduceRoutineId))
        return false;
      if (!this.reduceRoutineId.equals(that.reduceRoutineId))
        return false;
    }

    boolean this_present_reducedResults = true && this.isSetReducedResults();
    boolean that_present_reducedResults = true && that.isSetReducedResults();
    if (this_present_reducedResults || that_present_reducedResults) {
      if (!(this_present_reducedResults && that_present_reducedResults))
        return false;
      if (!this.reducedResults.equals(that.reducedResults))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetProgramId()) ? 131071 : 524287);
    if (isSetProgramId())
      hashCode = hashCode * 8191 + programId.hashCode();

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + state.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(finishTime);

    hashCode = hashCode * 8191 + scheduledTasks;

    hashCode = hashCode * 8191 + runningTasks;

    hashCode = hashCode * 8191 + successfulTasks;

    hashCode = hashCode * 8191 + failedTasks;

    hashCode = hashCode * 8191 + ((isSetMapRoutineId()) ? 131071 : 524287);
    if (isSetMapRoutineId())
      hashCode = hashCode * 8191 + mapRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetReduceRoutineId()) ? 131071 : 524287);
    if (isSetReduceRoutineId())
      hashCode = hashCode * 8191 + reduceRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetReducedResults()) ? 131071 : 524287);
    if (isSetReducedResults())
      hashCode = hashCode * 8191 + reducedResults.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(JobDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProgramId()).compareTo(other.isSetProgramId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProgramId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.programId, other.programId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetState()).compareTo(other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFinishTime()).compareTo(other.isSetFinishTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinishTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finishTime, other.finishTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetScheduledTasks()).compareTo(other.isSetScheduledTasks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScheduledTasks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scheduledTasks, other.scheduledTasks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRunningTasks()).compareTo(other.isSetRunningTasks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRunningTasks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.runningTasks, other.runningTasks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSuccessfulTasks()).compareTo(other.isSetSuccessfulTasks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuccessfulTasks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.successfulTasks, other.successfulTasks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFailedTasks()).compareTo(other.isSetFailedTasks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFailedTasks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.failedTasks, other.failedTasks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMapRoutineId()).compareTo(other.isSetMapRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMapRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mapRoutineId, other.mapRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReduceRoutineId()).compareTo(other.isSetReduceRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReduceRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reduceRoutineId, other.reduceRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReducedResults()).compareTo(other.isSetReducedResults());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReducedResults()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reducedResults, other.reducedResults);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("JobDTO(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("programId:");
    if (this.programId == null) {
      sb.append("null");
    } else {
      sb.append(this.programId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("state:");
    if (this.state == null) {
      sb.append("null");
    } else {
      sb.append(this.state);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("finishTime:");
    sb.append(this.finishTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("scheduledTasks:");
    sb.append(this.scheduledTasks);
    first = false;
    if (!first) sb.append(", ");
    sb.append("runningTasks:");
    sb.append(this.runningTasks);
    first = false;
    if (!first) sb.append(", ");
    sb.append("successfulTasks:");
    sb.append(this.successfulTasks);
    first = false;
    if (!first) sb.append(", ");
    sb.append("failedTasks:");
    sb.append(this.failedTasks);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mapRoutineId:");
    if (this.mapRoutineId == null) {
      sb.append("null");
    } else {
      sb.append(this.mapRoutineId);
    }
    first = false;
    if (isSetReduceRoutineId()) {
      if (!first) sb.append(", ");
      sb.append("reduceRoutineId:");
      if (this.reduceRoutineId == null) {
        sb.append("null");
      } else {
        sb.append(this.reduceRoutineId);
      }
      first = false;
    }
    if (isSetReducedResults()) {
      if (!first) sb.append(", ");
      sb.append("reducedResults:");
      if (this.reducedResults == null) {
        sb.append("null");
      } else {
        sb.append(this.reducedResults);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobDTOStandardScheme getScheme() {
      return new JobDTOStandardScheme();
    }
  }

  private static class JobDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<JobDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROGRAM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.programId = iprot.readString();
              struct.setProgramIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = at.enfilo.def.transfer.dto.ExecutionState.findByValue(iprot.readI32());
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FINISH_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.finishTime = iprot.readI64();
              struct.setFinishTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SCHEDULED_TASKS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.scheduledTasks = iprot.readI32();
              struct.setScheduledTasksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RUNNING_TASKS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.runningTasks = iprot.readI32();
              struct.setRunningTasksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SUCCESSFUL_TASKS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.successfulTasks = iprot.readI32();
              struct.setSuccessfulTasksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FAILED_TASKS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.failedTasks = iprot.readI32();
              struct.setFailedTasksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MAP_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mapRoutineId = iprot.readString();
              struct.setMapRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REDUCE_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reduceRoutineId = iprot.readString();
              struct.setReduceRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REDUCED_RESULTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list34 = iprot.readListBegin();
                struct.reducedResults = new java.util.ArrayList<ResourceDTO>(_list34.size);
                ResourceDTO _elem35;
                for (int _i36 = 0; _i36 < _list34.size; ++_i36)
                {
                  _elem35 = new ResourceDTO();
                  _elem35.read(iprot);
                  struct.reducedResults.add(_elem35);
                }
                iprot.readListEnd();
              }
              struct.setReducedResultsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.programId != null) {
        oprot.writeFieldBegin(PROGRAM_ID_FIELD_DESC);
        oprot.writeString(struct.programId);
        oprot.writeFieldEnd();
      }
      if (struct.state != null) {
        oprot.writeFieldBegin(STATE_FIELD_DESC);
        oprot.writeI32(struct.state.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_TIME_FIELD_DESC);
      oprot.writeI64(struct.finishTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SCHEDULED_TASKS_FIELD_DESC);
      oprot.writeI32(struct.scheduledTasks);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RUNNING_TASKS_FIELD_DESC);
      oprot.writeI32(struct.runningTasks);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SUCCESSFUL_TASKS_FIELD_DESC);
      oprot.writeI32(struct.successfulTasks);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FAILED_TASKS_FIELD_DESC);
      oprot.writeI32(struct.failedTasks);
      oprot.writeFieldEnd();
      if (struct.mapRoutineId != null) {
        oprot.writeFieldBegin(MAP_ROUTINE_ID_FIELD_DESC);
        oprot.writeString(struct.mapRoutineId);
        oprot.writeFieldEnd();
      }
      if (struct.reduceRoutineId != null) {
        if (struct.isSetReduceRoutineId()) {
          oprot.writeFieldBegin(REDUCE_ROUTINE_ID_FIELD_DESC);
          oprot.writeString(struct.reduceRoutineId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.reducedResults != null) {
        if (struct.isSetReducedResults()) {
          oprot.writeFieldBegin(REDUCED_RESULTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.reducedResults.size()));
            for (ResourceDTO _iter37 : struct.reducedResults)
            {
              _iter37.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobDTOTupleScheme getScheme() {
      return new JobDTOTupleScheme();
    }
  }

  private static class JobDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<JobDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetProgramId()) {
        optionals.set(1);
      }
      if (struct.isSetState()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetStartTime()) {
        optionals.set(4);
      }
      if (struct.isSetFinishTime()) {
        optionals.set(5);
      }
      if (struct.isSetScheduledTasks()) {
        optionals.set(6);
      }
      if (struct.isSetRunningTasks()) {
        optionals.set(7);
      }
      if (struct.isSetSuccessfulTasks()) {
        optionals.set(8);
      }
      if (struct.isSetFailedTasks()) {
        optionals.set(9);
      }
      if (struct.isSetMapRoutineId()) {
        optionals.set(10);
      }
      if (struct.isSetReduceRoutineId()) {
        optionals.set(11);
      }
      if (struct.isSetReducedResults()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetProgramId()) {
        oprot.writeString(struct.programId);
      }
      if (struct.isSetState()) {
        oprot.writeI32(struct.state.getValue());
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetFinishTime()) {
        oprot.writeI64(struct.finishTime);
      }
      if (struct.isSetScheduledTasks()) {
        oprot.writeI32(struct.scheduledTasks);
      }
      if (struct.isSetRunningTasks()) {
        oprot.writeI32(struct.runningTasks);
      }
      if (struct.isSetSuccessfulTasks()) {
        oprot.writeI32(struct.successfulTasks);
      }
      if (struct.isSetFailedTasks()) {
        oprot.writeI32(struct.failedTasks);
      }
      if (struct.isSetMapRoutineId()) {
        oprot.writeString(struct.mapRoutineId);
      }
      if (struct.isSetReduceRoutineId()) {
        oprot.writeString(struct.reduceRoutineId);
      }
      if (struct.isSetReducedResults()) {
        {
          oprot.writeI32(struct.reducedResults.size());
          for (ResourceDTO _iter38 : struct.reducedResults)
          {
            _iter38.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.programId = iprot.readString();
        struct.setProgramIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.state = at.enfilo.def.transfer.dto.ExecutionState.findByValue(iprot.readI32());
        struct.setStateIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.finishTime = iprot.readI64();
        struct.setFinishTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.scheduledTasks = iprot.readI32();
        struct.setScheduledTasksIsSet(true);
      }
      if (incoming.get(7)) {
        struct.runningTasks = iprot.readI32();
        struct.setRunningTasksIsSet(true);
      }
      if (incoming.get(8)) {
        struct.successfulTasks = iprot.readI32();
        struct.setSuccessfulTasksIsSet(true);
      }
      if (incoming.get(9)) {
        struct.failedTasks = iprot.readI32();
        struct.setFailedTasksIsSet(true);
      }
      if (incoming.get(10)) {
        struct.mapRoutineId = iprot.readString();
        struct.setMapRoutineIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.reduceRoutineId = iprot.readString();
        struct.setReduceRoutineIdIsSet(true);
      }
      if (incoming.get(12)) {
        {
          org.apache.thrift.protocol.TList _list39 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.reducedResults = new java.util.ArrayList<ResourceDTO>(_list39.size);
          ResourceDTO _elem40;
          for (int _i41 = 0; _i41 < _list39.size; ++_i41)
          {
            _elem40 = new ResourceDTO();
            _elem40.read(iprot);
            struct.reducedResults.add(_elem40);
          }
        }
        struct.setReducedResultsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

