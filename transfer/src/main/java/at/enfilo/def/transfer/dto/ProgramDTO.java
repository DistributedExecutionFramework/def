/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package at.enfilo.def.transfer.dto;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-07-30")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ProgramDTO implements org.apache.thrift.TBase<ProgramDTO, ProgramDTO._Fields>, java.io.Serializable, Cloneable, Comparable<ProgramDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProgramDTO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField FINISH_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("finishTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField NR_OF_JOBS_FIELD_DESC = new org.apache.thrift.protocol.TField("nrOfJobs", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField SHARED_RESOURCES_FIELD_DESC = new org.apache.thrift.protocol.TField("sharedResources", org.apache.thrift.protocol.TType.MAP, (short)10);
  private static final org.apache.thrift.protocol.TField CLIENT_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientRoutineId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField RESULTS_FIELD_DESC = new org.apache.thrift.protocol.TField("results", org.apache.thrift.protocol.TType.MAP, (short)12);
  private static final org.apache.thrift.protocol.TField MESSAGES_FIELD_DESC = new org.apache.thrift.protocol.TField("messages", org.apache.thrift.protocol.TType.LIST, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ProgramDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ProgramDTOTupleSchemeFactory();

  public java.lang.String id; // required
  /**
   * 
   * @see ExecutionState
   */
  public ExecutionState state; // required
  public long createTime; // required
  public long finishTime; // required
  public java.lang.String userId; // required
  public java.lang.String name; // required
  public java.lang.String description; // required
  public int nrOfJobs; // required
  public java.util.Map<java.lang.String,java.lang.String> sharedResources; // required
  public java.lang.String clientRoutineId; // optional
  public java.util.Map<java.lang.String,ResourceDTO> results; // optional
  public java.util.List<java.lang.String> messages; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    /**
     * 
     * @see ExecutionState
     */
    STATE((short)2, "state"),
    CREATE_TIME((short)3, "createTime"),
    FINISH_TIME((short)4, "finishTime"),
    USER_ID((short)6, "userId"),
    NAME((short)7, "name"),
    DESCRIPTION((short)8, "description"),
    NR_OF_JOBS((short)9, "nrOfJobs"),
    SHARED_RESOURCES((short)10, "sharedResources"),
    CLIENT_ROUTINE_ID((short)11, "clientRoutineId"),
    RESULTS((short)12, "results"),
    MESSAGES((short)13, "messages");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // STATE
          return STATE;
        case 3: // CREATE_TIME
          return CREATE_TIME;
        case 4: // FINISH_TIME
          return FINISH_TIME;
        case 6: // USER_ID
          return USER_ID;
        case 7: // NAME
          return NAME;
        case 8: // DESCRIPTION
          return DESCRIPTION;
        case 9: // NR_OF_JOBS
          return NR_OF_JOBS;
        case 10: // SHARED_RESOURCES
          return SHARED_RESOURCES;
        case 11: // CLIENT_ROUTINE_ID
          return CLIENT_ROUTINE_ID;
        case 12: // RESULTS
          return RESULTS;
        case 13: // MESSAGES
          return MESSAGES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private static final int __FINISHTIME_ISSET_ID = 1;
  private static final int __NROFJOBS_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.CLIENT_ROUTINE_ID,_Fields.RESULTS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ExecutionState.class)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FINISH_TIME, new org.apache.thrift.meta_data.FieldMetaData("finishTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NR_OF_JOBS, new org.apache.thrift.meta_data.FieldMetaData("nrOfJobs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHARED_RESOURCES, new org.apache.thrift.meta_data.FieldMetaData("sharedResources", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , "Id"))));
    tmpMap.put(_Fields.CLIENT_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("clientRoutineId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.RESULTS, new org.apache.thrift.meta_data.FieldMetaData("results", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ResourceDTO"))));
    tmpMap.put(_Fields.MESSAGES, new org.apache.thrift.meta_data.FieldMetaData("messages", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProgramDTO.class, metaDataMap);
  }

  public ProgramDTO() {
  }

  public ProgramDTO(
    java.lang.String id,
    ExecutionState state,
    long createTime,
    long finishTime,
    java.lang.String userId,
    java.lang.String name,
    java.lang.String description,
    int nrOfJobs,
    java.util.Map<java.lang.String,java.lang.String> sharedResources,
    java.util.List<java.lang.String> messages)
  {
    this();
    this.id = id;
    this.state = state;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.finishTime = finishTime;
    setFinishTimeIsSet(true);
    this.userId = userId;
    this.name = name;
    this.description = description;
    this.nrOfJobs = nrOfJobs;
    setNrOfJobsIsSet(true);
    this.sharedResources = sharedResources;
    this.messages = messages;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProgramDTO(ProgramDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
    this.createTime = other.createTime;
    this.finishTime = other.finishTime;
    if (other.isSetUserId()) {
      this.userId = other.userId;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    this.nrOfJobs = other.nrOfJobs;
    if (other.isSetSharedResources()) {
      java.util.Map<java.lang.String,java.lang.String> __this__sharedResources = new java.util.HashMap<java.lang.String,java.lang.String>(other.sharedResources.size());
      for (java.util.Map.Entry<java.lang.String, java.lang.String> other_element : other.sharedResources.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.lang.String other_element_value = other_element.getValue();

        java.lang.String __this__sharedResources_copy_key = other_element_key;

        java.lang.String __this__sharedResources_copy_value = other_element_value;

        __this__sharedResources.put(__this__sharedResources_copy_key, __this__sharedResources_copy_value);
      }
      this.sharedResources = __this__sharedResources;
    }
    if (other.isSetClientRoutineId()) {
      this.clientRoutineId = other.clientRoutineId;
    }
    if (other.isSetResults()) {
      java.util.Map<java.lang.String,ResourceDTO> __this__results = new java.util.HashMap<java.lang.String,ResourceDTO>(other.results.size());
      for (java.util.Map.Entry<java.lang.String, ResourceDTO> other_element : other.results.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        ResourceDTO other_element_value = other_element.getValue();

        java.lang.String __this__results_copy_key = other_element_key;

        ResourceDTO __this__results_copy_value = new ResourceDTO(other_element_value);

        __this__results.put(__this__results_copy_key, __this__results_copy_value);
      }
      this.results = __this__results;
    }
    if (other.isSetMessages()) {
      java.util.List<java.lang.String> __this__messages = new java.util.ArrayList<java.lang.String>(other.messages);
      this.messages = __this__messages;
    }
  }

  public ProgramDTO deepCopy() {
    return new ProgramDTO(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.state = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setFinishTimeIsSet(false);
    this.finishTime = 0;
    this.userId = null;
    this.name = null;
    this.description = null;
    setNrOfJobsIsSet(false);
    this.nrOfJobs = 0;
    this.sharedResources = null;
    this.clientRoutineId = null;
    this.results = null;
    this.messages = null;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public ProgramDTO setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  /**
   * 
   * @see ExecutionState
   */
  public ExecutionState getState() {
    return this.state;
  }

  /**
   * 
   * @see ExecutionState
   */
  public ProgramDTO setState(ExecutionState state) {
    this.state = state;
    return this;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public ProgramDTO setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public long getFinishTime() {
    return this.finishTime;
  }

  public ProgramDTO setFinishTime(long finishTime) {
    this.finishTime = finishTime;
    setFinishTimeIsSet(true);
    return this;
  }

  public void unsetFinishTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FINISHTIME_ISSET_ID);
  }

  /** Returns true if field finishTime is set (has been assigned a value) and false otherwise */
  public boolean isSetFinishTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FINISHTIME_ISSET_ID);
  }

  public void setFinishTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FINISHTIME_ISSET_ID, value);
  }

  public java.lang.String getUserId() {
    return this.userId;
  }

  public ProgramDTO setUserId(java.lang.String userId) {
    this.userId = userId;
    return this;
  }

  public void unsetUserId() {
    this.userId = null;
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return this.userId != null;
  }

  public void setUserIdIsSet(boolean value) {
    if (!value) {
      this.userId = null;
    }
  }

  public java.lang.String getName() {
    return this.name;
  }

  public ProgramDTO setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getDescription() {
    return this.description;
  }

  public ProgramDTO setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public int getNrOfJobs() {
    return this.nrOfJobs;
  }

  public ProgramDTO setNrOfJobs(int nrOfJobs) {
    this.nrOfJobs = nrOfJobs;
    setNrOfJobsIsSet(true);
    return this;
  }

  public void unsetNrOfJobs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NROFJOBS_ISSET_ID);
  }

  /** Returns true if field nrOfJobs is set (has been assigned a value) and false otherwise */
  public boolean isSetNrOfJobs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NROFJOBS_ISSET_ID);
  }

  public void setNrOfJobsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NROFJOBS_ISSET_ID, value);
  }

  public int getSharedResourcesSize() {
    return (this.sharedResources == null) ? 0 : this.sharedResources.size();
  }

  public void putToSharedResources(java.lang.String key, java.lang.String val) {
    if (this.sharedResources == null) {
      this.sharedResources = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.sharedResources.put(key, val);
  }

  public java.util.Map<java.lang.String,java.lang.String> getSharedResources() {
    return this.sharedResources;
  }

  public ProgramDTO setSharedResources(java.util.Map<java.lang.String,java.lang.String> sharedResources) {
    this.sharedResources = sharedResources;
    return this;
  }

  public void unsetSharedResources() {
    this.sharedResources = null;
  }

  /** Returns true if field sharedResources is set (has been assigned a value) and false otherwise */
  public boolean isSetSharedResources() {
    return this.sharedResources != null;
  }

  public void setSharedResourcesIsSet(boolean value) {
    if (!value) {
      this.sharedResources = null;
    }
  }

  public java.lang.String getClientRoutineId() {
    return this.clientRoutineId;
  }

  public ProgramDTO setClientRoutineId(java.lang.String clientRoutineId) {
    this.clientRoutineId = clientRoutineId;
    return this;
  }

  public void unsetClientRoutineId() {
    this.clientRoutineId = null;
  }

  /** Returns true if field clientRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetClientRoutineId() {
    return this.clientRoutineId != null;
  }

  public void setClientRoutineIdIsSet(boolean value) {
    if (!value) {
      this.clientRoutineId = null;
    }
  }

  public int getResultsSize() {
    return (this.results == null) ? 0 : this.results.size();
  }

  public void putToResults(java.lang.String key, ResourceDTO val) {
    if (this.results == null) {
      this.results = new java.util.HashMap<java.lang.String,ResourceDTO>();
    }
    this.results.put(key, val);
  }

  public java.util.Map<java.lang.String,ResourceDTO> getResults() {
    return this.results;
  }

  public ProgramDTO setResults(java.util.Map<java.lang.String,ResourceDTO> results) {
    this.results = results;
    return this;
  }

  public void unsetResults() {
    this.results = null;
  }

  /** Returns true if field results is set (has been assigned a value) and false otherwise */
  public boolean isSetResults() {
    return this.results != null;
  }

  public void setResultsIsSet(boolean value) {
    if (!value) {
      this.results = null;
    }
  }

  public int getMessagesSize() {
    return (this.messages == null) ? 0 : this.messages.size();
  }

  public java.util.Iterator<java.lang.String> getMessagesIterator() {
    return (this.messages == null) ? null : this.messages.iterator();
  }

  public void addToMessages(java.lang.String elem) {
    if (this.messages == null) {
      this.messages = new java.util.ArrayList<java.lang.String>();
    }
    this.messages.add(elem);
  }

  public java.util.List<java.lang.String> getMessages() {
    return this.messages;
  }

  public ProgramDTO setMessages(java.util.List<java.lang.String> messages) {
    this.messages = messages;
    return this;
  }

  public void unsetMessages() {
    this.messages = null;
  }

  /** Returns true if field messages is set (has been assigned a value) and false otherwise */
  public boolean isSetMessages() {
    return this.messages != null;
  }

  public void setMessagesIsSet(boolean value) {
    if (!value) {
      this.messages = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((ExecutionState)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.Long)value);
      }
      break;

    case FINISH_TIME:
      if (value == null) {
        unsetFinishTime();
      } else {
        setFinishTime((java.lang.Long)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case NR_OF_JOBS:
      if (value == null) {
        unsetNrOfJobs();
      } else {
        setNrOfJobs((java.lang.Integer)value);
      }
      break;

    case SHARED_RESOURCES:
      if (value == null) {
        unsetSharedResources();
      } else {
        setSharedResources((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case CLIENT_ROUTINE_ID:
      if (value == null) {
        unsetClientRoutineId();
      } else {
        setClientRoutineId((java.lang.String)value);
      }
      break;

    case RESULTS:
      if (value == null) {
        unsetResults();
      } else {
        setResults((java.util.Map<java.lang.String,ResourceDTO>)value);
      }
      break;

    case MESSAGES:
      if (value == null) {
        unsetMessages();
      } else {
        setMessages((java.util.List<java.lang.String>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case STATE:
      return getState();

    case CREATE_TIME:
      return getCreateTime();

    case FINISH_TIME:
      return getFinishTime();

    case USER_ID:
      return getUserId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case NR_OF_JOBS:
      return getNrOfJobs();

    case SHARED_RESOURCES:
      return getSharedResources();

    case CLIENT_ROUTINE_ID:
      return getClientRoutineId();

    case RESULTS:
      return getResults();

    case MESSAGES:
      return getMessages();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case STATE:
      return isSetState();
    case CREATE_TIME:
      return isSetCreateTime();
    case FINISH_TIME:
      return isSetFinishTime();
    case USER_ID:
      return isSetUserId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case NR_OF_JOBS:
      return isSetNrOfJobs();
    case SHARED_RESOURCES:
      return isSetSharedResources();
    case CLIENT_ROUTINE_ID:
      return isSetClientRoutineId();
    case RESULTS:
      return isSetResults();
    case MESSAGES:
      return isSetMessages();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ProgramDTO)
      return this.equals((ProgramDTO)that);
    return false;
  }

  public boolean equals(ProgramDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_finishTime = true;
    boolean that_present_finishTime = true;
    if (this_present_finishTime || that_present_finishTime) {
      if (!(this_present_finishTime && that_present_finishTime))
        return false;
      if (this.finishTime != that.finishTime)
        return false;
    }

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (!this.userId.equals(that.userId))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_nrOfJobs = true;
    boolean that_present_nrOfJobs = true;
    if (this_present_nrOfJobs || that_present_nrOfJobs) {
      if (!(this_present_nrOfJobs && that_present_nrOfJobs))
        return false;
      if (this.nrOfJobs != that.nrOfJobs)
        return false;
    }

    boolean this_present_sharedResources = true && this.isSetSharedResources();
    boolean that_present_sharedResources = true && that.isSetSharedResources();
    if (this_present_sharedResources || that_present_sharedResources) {
      if (!(this_present_sharedResources && that_present_sharedResources))
        return false;
      if (!this.sharedResources.equals(that.sharedResources))
        return false;
    }

    boolean this_present_clientRoutineId = true && this.isSetClientRoutineId();
    boolean that_present_clientRoutineId = true && that.isSetClientRoutineId();
    if (this_present_clientRoutineId || that_present_clientRoutineId) {
      if (!(this_present_clientRoutineId && that_present_clientRoutineId))
        return false;
      if (!this.clientRoutineId.equals(that.clientRoutineId))
        return false;
    }

    boolean this_present_results = true && this.isSetResults();
    boolean that_present_results = true && that.isSetResults();
    if (this_present_results || that_present_results) {
      if (!(this_present_results && that_present_results))
        return false;
      if (!this.results.equals(that.results))
        return false;
    }

    boolean this_present_messages = true && this.isSetMessages();
    boolean that_present_messages = true && that.isSetMessages();
    if (this_present_messages || that_present_messages) {
      if (!(this_present_messages && that_present_messages))
        return false;
      if (!this.messages.equals(that.messages))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + state.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(finishTime);

    hashCode = hashCode * 8191 + ((isSetUserId()) ? 131071 : 524287);
    if (isSetUserId())
      hashCode = hashCode * 8191 + userId.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + description.hashCode();

    hashCode = hashCode * 8191 + nrOfJobs;

    hashCode = hashCode * 8191 + ((isSetSharedResources()) ? 131071 : 524287);
    if (isSetSharedResources())
      hashCode = hashCode * 8191 + sharedResources.hashCode();

    hashCode = hashCode * 8191 + ((isSetClientRoutineId()) ? 131071 : 524287);
    if (isSetClientRoutineId())
      hashCode = hashCode * 8191 + clientRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetResults()) ? 131071 : 524287);
    if (isSetResults())
      hashCode = hashCode * 8191 + results.hashCode();

    hashCode = hashCode * 8191 + ((isSetMessages()) ? 131071 : 524287);
    if (isSetMessages())
      hashCode = hashCode * 8191 + messages.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ProgramDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetState()).compareTo(other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFinishTime()).compareTo(other.isSetFinishTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinishTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finishTime, other.finishTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNrOfJobs()).compareTo(other.isSetNrOfJobs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNrOfJobs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nrOfJobs, other.nrOfJobs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSharedResources()).compareTo(other.isSetSharedResources());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSharedResources()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sharedResources, other.sharedResources);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClientRoutineId()).compareTo(other.isSetClientRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientRoutineId, other.clientRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResults()).compareTo(other.isSetResults());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResults()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.results, other.results);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessages()).compareTo(other.isSetMessages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessages()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messages, other.messages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ProgramDTO(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("state:");
    if (this.state == null) {
      sb.append("null");
    } else {
      sb.append(this.state);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("finishTime:");
    sb.append(this.finishTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    if (this.userId == null) {
      sb.append("null");
    } else {
      sb.append(this.userId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nrOfJobs:");
    sb.append(this.nrOfJobs);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sharedResources:");
    if (this.sharedResources == null) {
      sb.append("null");
    } else {
      sb.append(this.sharedResources);
    }
    first = false;
    if (isSetClientRoutineId()) {
      if (!first) sb.append(", ");
      sb.append("clientRoutineId:");
      if (this.clientRoutineId == null) {
        sb.append("null");
      } else {
        sb.append(this.clientRoutineId);
      }
      first = false;
    }
    if (isSetResults()) {
      if (!first) sb.append(", ");
      sb.append("results:");
      if (this.results == null) {
        sb.append("null");
      } else {
        sb.append(this.results);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("messages:");
    if (this.messages == null) {
      sb.append("null");
    } else {
      sb.append(this.messages);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProgramDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProgramDTOStandardScheme getScheme() {
      return new ProgramDTOStandardScheme();
    }
  }

  private static class ProgramDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ProgramDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProgramDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = at.enfilo.def.transfer.dto.ExecutionState.findByValue(iprot.readI32());
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FINISH_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.finishTime = iprot.readI64();
              struct.setFinishTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userId = iprot.readString();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NR_OF_JOBS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nrOfJobs = iprot.readI32();
              struct.setNrOfJobsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SHARED_RESOURCES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map50 = iprot.readMapBegin();
                struct.sharedResources = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map50.size);
                java.lang.String _key51;
                java.lang.String _val52;
                for (int _i53 = 0; _i53 < _map50.size; ++_i53)
                {
                  _key51 = iprot.readString();
                  _val52 = iprot.readString();
                  struct.sharedResources.put(_key51, _val52);
                }
                iprot.readMapEnd();
              }
              struct.setSharedResourcesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CLIENT_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientRoutineId = iprot.readString();
              struct.setClientRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // RESULTS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map54 = iprot.readMapBegin();
                struct.results = new java.util.HashMap<java.lang.String,ResourceDTO>(2*_map54.size);
                java.lang.String _key55;
                ResourceDTO _val56;
                for (int _i57 = 0; _i57 < _map54.size; ++_i57)
                {
                  _key55 = iprot.readString();
                  _val56 = new ResourceDTO();
                  _val56.read(iprot);
                  struct.results.put(_key55, _val56);
                }
                iprot.readMapEnd();
              }
              struct.setResultsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MESSAGES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list58 = iprot.readListBegin();
                struct.messages = new java.util.ArrayList<java.lang.String>(_list58.size);
                java.lang.String _elem59;
                for (int _i60 = 0; _i60 < _list58.size; ++_i60)
                {
                  _elem59 = iprot.readString();
                  struct.messages.add(_elem59);
                }
                iprot.readListEnd();
              }
              struct.setMessagesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProgramDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.state != null) {
        oprot.writeFieldBegin(STATE_FIELD_DESC);
        oprot.writeI32(struct.state.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_TIME_FIELD_DESC);
      oprot.writeI64(struct.finishTime);
      oprot.writeFieldEnd();
      if (struct.userId != null) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeString(struct.userId);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NR_OF_JOBS_FIELD_DESC);
      oprot.writeI32(struct.nrOfJobs);
      oprot.writeFieldEnd();
      if (struct.sharedResources != null) {
        oprot.writeFieldBegin(SHARED_RESOURCES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.sharedResources.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter61 : struct.sharedResources.entrySet())
          {
            oprot.writeString(_iter61.getKey());
            oprot.writeString(_iter61.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.clientRoutineId != null) {
        if (struct.isSetClientRoutineId()) {
          oprot.writeFieldBegin(CLIENT_ROUTINE_ID_FIELD_DESC);
          oprot.writeString(struct.clientRoutineId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.results != null) {
        if (struct.isSetResults()) {
          oprot.writeFieldBegin(RESULTS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.results.size()));
            for (java.util.Map.Entry<java.lang.String, ResourceDTO> _iter62 : struct.results.entrySet())
            {
              oprot.writeString(_iter62.getKey());
              _iter62.getValue().write(oprot);
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.messages != null) {
        oprot.writeFieldBegin(MESSAGES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.messages.size()));
          for (java.lang.String _iter63 : struct.messages)
          {
            oprot.writeString(_iter63);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProgramDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProgramDTOTupleScheme getScheme() {
      return new ProgramDTOTupleScheme();
    }
  }

  private static class ProgramDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ProgramDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProgramDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetState()) {
        optionals.set(1);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(2);
      }
      if (struct.isSetFinishTime()) {
        optionals.set(3);
      }
      if (struct.isSetUserId()) {
        optionals.set(4);
      }
      if (struct.isSetName()) {
        optionals.set(5);
      }
      if (struct.isSetDescription()) {
        optionals.set(6);
      }
      if (struct.isSetNrOfJobs()) {
        optionals.set(7);
      }
      if (struct.isSetSharedResources()) {
        optionals.set(8);
      }
      if (struct.isSetClientRoutineId()) {
        optionals.set(9);
      }
      if (struct.isSetResults()) {
        optionals.set(10);
      }
      if (struct.isSetMessages()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetState()) {
        oprot.writeI32(struct.state.getValue());
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetFinishTime()) {
        oprot.writeI64(struct.finishTime);
      }
      if (struct.isSetUserId()) {
        oprot.writeString(struct.userId);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetNrOfJobs()) {
        oprot.writeI32(struct.nrOfJobs);
      }
      if (struct.isSetSharedResources()) {
        {
          oprot.writeI32(struct.sharedResources.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter64 : struct.sharedResources.entrySet())
          {
            oprot.writeString(_iter64.getKey());
            oprot.writeString(_iter64.getValue());
          }
        }
      }
      if (struct.isSetClientRoutineId()) {
        oprot.writeString(struct.clientRoutineId);
      }
      if (struct.isSetResults()) {
        {
          oprot.writeI32(struct.results.size());
          for (java.util.Map.Entry<java.lang.String, ResourceDTO> _iter65 : struct.results.entrySet())
          {
            oprot.writeString(_iter65.getKey());
            _iter65.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetMessages()) {
        {
          oprot.writeI32(struct.messages.size());
          for (java.lang.String _iter66 : struct.messages)
          {
            oprot.writeString(_iter66);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProgramDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.state = at.enfilo.def.transfer.dto.ExecutionState.findByValue(iprot.readI32());
        struct.setStateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.finishTime = iprot.readI64();
        struct.setFinishTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.userId = iprot.readString();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nrOfJobs = iprot.readI32();
        struct.setNrOfJobsIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TMap _map67 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.sharedResources = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map67.size);
          java.lang.String _key68;
          java.lang.String _val69;
          for (int _i70 = 0; _i70 < _map67.size; ++_i70)
          {
            _key68 = iprot.readString();
            _val69 = iprot.readString();
            struct.sharedResources.put(_key68, _val69);
          }
        }
        struct.setSharedResourcesIsSet(true);
      }
      if (incoming.get(9)) {
        struct.clientRoutineId = iprot.readString();
        struct.setClientRoutineIdIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TMap _map71 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.results = new java.util.HashMap<java.lang.String,ResourceDTO>(2*_map71.size);
          java.lang.String _key72;
          ResourceDTO _val73;
          for (int _i74 = 0; _i74 < _map71.size; ++_i74)
          {
            _key72 = iprot.readString();
            _val73 = new ResourceDTO();
            _val73.read(iprot);
            struct.results.put(_key72, _val73);
          }
        }
        struct.setResultsIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TList _list75 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.messages = new java.util.ArrayList<java.lang.String>(_list75.size);
          java.lang.String _elem76;
          for (int _i77 = 0; _i77 < _list75.size; ++_i77)
          {
            _elem76 = iprot.readString();
            struct.messages.add(_elem76);
          }
        }
        struct.setMessagesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

