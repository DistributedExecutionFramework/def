/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package at.enfilo.def.transfer.dto;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-08-13")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TaskDTO implements org.apache.thrift.TBase<TaskDTO, TaskDTO._Fields>, java.io.Serializable, Cloneable, Comparable<TaskDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TaskDTO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField JOB_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("jobId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PROGRAM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("programId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField FINISH_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("finishTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField OBJECTIVE_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("objectiveRoutineId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MAP_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("mapRoutineId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField IN_PARAMETERS_FIELD_DESC = new org.apache.thrift.protocol.TField("inParameters", org.apache.thrift.protocol.TType.MAP, (short)10);
  private static final org.apache.thrift.protocol.TField OUT_PARAMETERS_FIELD_DESC = new org.apache.thrift.protocol.TField("outParameters", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField MESSAGES_FIELD_DESC = new org.apache.thrift.protocol.TField("messages", org.apache.thrift.protocol.TType.LIST, (short)12);
  private static final org.apache.thrift.protocol.TField RUNTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("runtime", org.apache.thrift.protocol.TType.I64, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TaskDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TaskDTOTupleSchemeFactory();

  private java.lang.String id; // required
  private java.lang.String jobId; // required
  private java.lang.String programId; // required
  private ExecutionState state; // required
  private long startTime; // required
  private long createTime; // required
  private long finishTime; // required
  private java.lang.String objectiveRoutineId; // required
  private java.lang.String mapRoutineId; // required
  private java.util.Map<java.lang.String,ResourceDTO> inParameters; // required
  private java.util.List<ResourceDTO> outParameters; // required
  private java.util.List<java.lang.String> messages; // required
  private long runtime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    JOB_ID((short)2, "jobId"),
    PROGRAM_ID((short)3, "programId"),
    /**
     * 
     * @see ExecutionState
     */
    STATE((short)4, "state"),
    START_TIME((short)5, "startTime"),
    CREATE_TIME((short)6, "createTime"),
    FINISH_TIME((short)7, "finishTime"),
    OBJECTIVE_ROUTINE_ID((short)8, "objectiveRoutineId"),
    MAP_ROUTINE_ID((short)9, "mapRoutineId"),
    IN_PARAMETERS((short)10, "inParameters"),
    OUT_PARAMETERS((short)11, "outParameters"),
    MESSAGES((short)12, "messages"),
    RUNTIME((short)13, "runtime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // JOB_ID
          return JOB_ID;
        case 3: // PROGRAM_ID
          return PROGRAM_ID;
        case 4: // STATE
          return STATE;
        case 5: // START_TIME
          return START_TIME;
        case 6: // CREATE_TIME
          return CREATE_TIME;
        case 7: // FINISH_TIME
          return FINISH_TIME;
        case 8: // OBJECTIVE_ROUTINE_ID
          return OBJECTIVE_ROUTINE_ID;
        case 9: // MAP_ROUTINE_ID
          return MAP_ROUTINE_ID;
        case 10: // IN_PARAMETERS
          return IN_PARAMETERS;
        case 11: // OUT_PARAMETERS
          return OUT_PARAMETERS;
        case 12: // MESSAGES
          return MESSAGES;
        case 13: // RUNTIME
          return RUNTIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTTIME_ISSET_ID = 0;
  private static final int __CREATETIME_ISSET_ID = 1;
  private static final int __FINISHTIME_ISSET_ID = 2;
  private static final int __RUNTIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.JOB_ID, new org.apache.thrift.meta_data.FieldMetaData("jobId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.PROGRAM_ID, new org.apache.thrift.meta_data.FieldMetaData("programId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ExecutionState.class)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FINISH_TIME, new org.apache.thrift.meta_data.FieldMetaData("finishTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OBJECTIVE_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("objectiveRoutineId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.MAP_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("mapRoutineId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.IN_PARAMETERS, new org.apache.thrift.meta_data.FieldMetaData("inParameters", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ResourceDTO"))));
    tmpMap.put(_Fields.OUT_PARAMETERS, new org.apache.thrift.meta_data.FieldMetaData("outParameters", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "ResourceDTO"))));
    tmpMap.put(_Fields.MESSAGES, new org.apache.thrift.meta_data.FieldMetaData("messages", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.RUNTIME, new org.apache.thrift.meta_data.FieldMetaData("runtime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TaskDTO.class, metaDataMap);
  }

  public TaskDTO() {
  }

  public TaskDTO(
    java.lang.String id,
    java.lang.String jobId,
    java.lang.String programId,
    ExecutionState state,
    long startTime,
    long createTime,
    long finishTime,
    java.lang.String objectiveRoutineId,
    java.lang.String mapRoutineId,
    java.util.Map<java.lang.String,ResourceDTO> inParameters,
    java.util.List<ResourceDTO> outParameters,
    java.util.List<java.lang.String> messages,
    long runtime)
  {
    this();
    this.id = id;
    this.jobId = jobId;
    this.programId = programId;
    this.state = state;
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.finishTime = finishTime;
    setFinishTimeIsSet(true);
    this.objectiveRoutineId = objectiveRoutineId;
    this.mapRoutineId = mapRoutineId;
    this.inParameters = inParameters;
    this.outParameters = outParameters;
    this.messages = messages;
    this.runtime = runtime;
    setRuntimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TaskDTO(TaskDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetJobId()) {
      this.jobId = other.jobId;
    }
    if (other.isSetProgramId()) {
      this.programId = other.programId;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
    this.startTime = other.startTime;
    this.createTime = other.createTime;
    this.finishTime = other.finishTime;
    if (other.isSetObjectiveRoutineId()) {
      this.objectiveRoutineId = other.objectiveRoutineId;
    }
    if (other.isSetMapRoutineId()) {
      this.mapRoutineId = other.mapRoutineId;
    }
    if (other.isSetInParameters()) {
      java.util.Map<java.lang.String,ResourceDTO> __this__inParameters = new java.util.HashMap<java.lang.String,ResourceDTO>(other.inParameters.size());
      for (java.util.Map.Entry<java.lang.String, ResourceDTO> other_element : other.inParameters.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        ResourceDTO other_element_value = other_element.getValue();

        java.lang.String __this__inParameters_copy_key = other_element_key;

        ResourceDTO __this__inParameters_copy_value = new ResourceDTO(other_element_value);

        __this__inParameters.put(__this__inParameters_copy_key, __this__inParameters_copy_value);
      }
      this.inParameters = __this__inParameters;
    }
    if (other.isSetOutParameters()) {
      java.util.List<ResourceDTO> __this__outParameters = new java.util.ArrayList<ResourceDTO>(other.outParameters.size());
      for (ResourceDTO other_element : other.outParameters) {
        __this__outParameters.add(new ResourceDTO(other_element));
      }
      this.outParameters = __this__outParameters;
    }
    if (other.isSetMessages()) {
      java.util.List<java.lang.String> __this__messages = new java.util.ArrayList<java.lang.String>(other.messages);
      this.messages = __this__messages;
    }
    this.runtime = other.runtime;
  }

  public TaskDTO deepCopy() {
    return new TaskDTO(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.jobId = null;
    this.programId = null;
    this.state = null;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setFinishTimeIsSet(false);
    this.finishTime = 0;
    this.objectiveRoutineId = null;
    this.mapRoutineId = null;
    this.inParameters = null;
    this.outParameters = null;
    this.messages = null;
    setRuntimeIsSet(false);
    this.runtime = 0;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public void setId(java.lang.String id) {
    this.id = id;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getJobId() {
    return this.jobId;
  }

  public void setJobId(java.lang.String jobId) {
    this.jobId = jobId;
  }

  public void unsetJobId() {
    this.jobId = null;
  }

  /** Returns true if field jobId is set (has been assigned a value) and false otherwise */
  public boolean isSetJobId() {
    return this.jobId != null;
  }

  public void setJobIdIsSet(boolean value) {
    if (!value) {
      this.jobId = null;
    }
  }

  public java.lang.String getProgramId() {
    return this.programId;
  }

  public void setProgramId(java.lang.String programId) {
    this.programId = programId;
  }

  public void unsetProgramId() {
    this.programId = null;
  }

  /** Returns true if field programId is set (has been assigned a value) and false otherwise */
  public boolean isSetProgramId() {
    return this.programId != null;
  }

  public void setProgramIdIsSet(boolean value) {
    if (!value) {
      this.programId = null;
    }
  }

  /**
   * 
   * @see ExecutionState
   */
  public ExecutionState getState() {
    return this.state;
  }

  /**
   * 
   * @see ExecutionState
   */
  public void setState(ExecutionState state) {
    this.state = state;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  public long getStartTime() {
    return this.startTime;
  }

  public void setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public void setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
  }

  public void unsetCreateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public long getFinishTime() {
    return this.finishTime;
  }

  public void setFinishTime(long finishTime) {
    this.finishTime = finishTime;
    setFinishTimeIsSet(true);
  }

  public void unsetFinishTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FINISHTIME_ISSET_ID);
  }

  /** Returns true if field finishTime is set (has been assigned a value) and false otherwise */
  public boolean isSetFinishTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FINISHTIME_ISSET_ID);
  }

  public void setFinishTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FINISHTIME_ISSET_ID, value);
  }

  public java.lang.String getObjectiveRoutineId() {
    return this.objectiveRoutineId;
  }

  public void setObjectiveRoutineId(java.lang.String objectiveRoutineId) {
    this.objectiveRoutineId = objectiveRoutineId;
  }

  public void unsetObjectiveRoutineId() {
    this.objectiveRoutineId = null;
  }

  /** Returns true if field objectiveRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectiveRoutineId() {
    return this.objectiveRoutineId != null;
  }

  public void setObjectiveRoutineIdIsSet(boolean value) {
    if (!value) {
      this.objectiveRoutineId = null;
    }
  }

  public java.lang.String getMapRoutineId() {
    return this.mapRoutineId;
  }

  public void setMapRoutineId(java.lang.String mapRoutineId) {
    this.mapRoutineId = mapRoutineId;
  }

  public void unsetMapRoutineId() {
    this.mapRoutineId = null;
  }

  /** Returns true if field mapRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetMapRoutineId() {
    return this.mapRoutineId != null;
  }

  public void setMapRoutineIdIsSet(boolean value) {
    if (!value) {
      this.mapRoutineId = null;
    }
  }

  public int getInParametersSize() {
    return (this.inParameters == null) ? 0 : this.inParameters.size();
  }

  public void putToInParameters(java.lang.String key, ResourceDTO val) {
    if (this.inParameters == null) {
      this.inParameters = new java.util.HashMap<java.lang.String,ResourceDTO>();
    }
    this.inParameters.put(key, val);
  }

  public java.util.Map<java.lang.String,ResourceDTO> getInParameters() {
    return this.inParameters;
  }

  public void setInParameters(java.util.Map<java.lang.String,ResourceDTO> inParameters) {
    this.inParameters = inParameters;
  }

  public void unsetInParameters() {
    this.inParameters = null;
  }

  /** Returns true if field inParameters is set (has been assigned a value) and false otherwise */
  public boolean isSetInParameters() {
    return this.inParameters != null;
  }

  public void setInParametersIsSet(boolean value) {
    if (!value) {
      this.inParameters = null;
    }
  }

  public int getOutParametersSize() {
    return (this.outParameters == null) ? 0 : this.outParameters.size();
  }

  public java.util.Iterator<ResourceDTO> getOutParametersIterator() {
    return (this.outParameters == null) ? null : this.outParameters.iterator();
  }

  public void addToOutParameters(ResourceDTO elem) {
    if (this.outParameters == null) {
      this.outParameters = new java.util.ArrayList<ResourceDTO>();
    }
    this.outParameters.add(elem);
  }

  public java.util.List<ResourceDTO> getOutParameters() {
    return this.outParameters;
  }

  public void setOutParameters(java.util.List<ResourceDTO> outParameters) {
    this.outParameters = outParameters;
  }

  public void unsetOutParameters() {
    this.outParameters = null;
  }

  /** Returns true if field outParameters is set (has been assigned a value) and false otherwise */
  public boolean isSetOutParameters() {
    return this.outParameters != null;
  }

  public void setOutParametersIsSet(boolean value) {
    if (!value) {
      this.outParameters = null;
    }
  }

  public int getMessagesSize() {
    return (this.messages == null) ? 0 : this.messages.size();
  }

  public java.util.Iterator<java.lang.String> getMessagesIterator() {
    return (this.messages == null) ? null : this.messages.iterator();
  }

  public void addToMessages(java.lang.String elem) {
    if (this.messages == null) {
      this.messages = new java.util.ArrayList<java.lang.String>();
    }
    this.messages.add(elem);
  }

  public java.util.List<java.lang.String> getMessages() {
    return this.messages;
  }

  public void setMessages(java.util.List<java.lang.String> messages) {
    this.messages = messages;
  }

  public void unsetMessages() {
    this.messages = null;
  }

  /** Returns true if field messages is set (has been assigned a value) and false otherwise */
  public boolean isSetMessages() {
    return this.messages != null;
  }

  public void setMessagesIsSet(boolean value) {
    if (!value) {
      this.messages = null;
    }
  }

  public long getRuntime() {
    return this.runtime;
  }

  public void setRuntime(long runtime) {
    this.runtime = runtime;
    setRuntimeIsSet(true);
  }

  public void unsetRuntime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RUNTIME_ISSET_ID);
  }

  /** Returns true if field runtime is set (has been assigned a value) and false otherwise */
  public boolean isSetRuntime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RUNTIME_ISSET_ID);
  }

  public void setRuntimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RUNTIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case JOB_ID:
      if (value == null) {
        unsetJobId();
      } else {
        setJobId((java.lang.String)value);
      }
      break;

    case PROGRAM_ID:
      if (value == null) {
        unsetProgramId();
      } else {
        setProgramId((java.lang.String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((ExecutionState)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((java.lang.Long)value);
      }
      break;

    case FINISH_TIME:
      if (value == null) {
        unsetFinishTime();
      } else {
        setFinishTime((java.lang.Long)value);
      }
      break;

    case OBJECTIVE_ROUTINE_ID:
      if (value == null) {
        unsetObjectiveRoutineId();
      } else {
        setObjectiveRoutineId((java.lang.String)value);
      }
      break;

    case MAP_ROUTINE_ID:
      if (value == null) {
        unsetMapRoutineId();
      } else {
        setMapRoutineId((java.lang.String)value);
      }
      break;

    case IN_PARAMETERS:
      if (value == null) {
        unsetInParameters();
      } else {
        setInParameters((java.util.Map<java.lang.String,ResourceDTO>)value);
      }
      break;

    case OUT_PARAMETERS:
      if (value == null) {
        unsetOutParameters();
      } else {
        setOutParameters((java.util.List<ResourceDTO>)value);
      }
      break;

    case MESSAGES:
      if (value == null) {
        unsetMessages();
      } else {
        setMessages((java.util.List<java.lang.String>)value);
      }
      break;

    case RUNTIME:
      if (value == null) {
        unsetRuntime();
      } else {
        setRuntime((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case JOB_ID:
      return getJobId();

    case PROGRAM_ID:
      return getProgramId();

    case STATE:
      return getState();

    case START_TIME:
      return getStartTime();

    case CREATE_TIME:
      return getCreateTime();

    case FINISH_TIME:
      return getFinishTime();

    case OBJECTIVE_ROUTINE_ID:
      return getObjectiveRoutineId();

    case MAP_ROUTINE_ID:
      return getMapRoutineId();

    case IN_PARAMETERS:
      return getInParameters();

    case OUT_PARAMETERS:
      return getOutParameters();

    case MESSAGES:
      return getMessages();

    case RUNTIME:
      return getRuntime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case JOB_ID:
      return isSetJobId();
    case PROGRAM_ID:
      return isSetProgramId();
    case STATE:
      return isSetState();
    case START_TIME:
      return isSetStartTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case FINISH_TIME:
      return isSetFinishTime();
    case OBJECTIVE_ROUTINE_ID:
      return isSetObjectiveRoutineId();
    case MAP_ROUTINE_ID:
      return isSetMapRoutineId();
    case IN_PARAMETERS:
      return isSetInParameters();
    case OUT_PARAMETERS:
      return isSetOutParameters();
    case MESSAGES:
      return isSetMessages();
    case RUNTIME:
      return isSetRuntime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TaskDTO)
      return this.equals((TaskDTO)that);
    return false;
  }

  public boolean equals(TaskDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_jobId = true && this.isSetJobId();
    boolean that_present_jobId = true && that.isSetJobId();
    if (this_present_jobId || that_present_jobId) {
      if (!(this_present_jobId && that_present_jobId))
        return false;
      if (!this.jobId.equals(that.jobId))
        return false;
    }

    boolean this_present_programId = true && this.isSetProgramId();
    boolean that_present_programId = true && that.isSetProgramId();
    if (this_present_programId || that_present_programId) {
      if (!(this_present_programId && that_present_programId))
        return false;
      if (!this.programId.equals(that.programId))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_finishTime = true;
    boolean that_present_finishTime = true;
    if (this_present_finishTime || that_present_finishTime) {
      if (!(this_present_finishTime && that_present_finishTime))
        return false;
      if (this.finishTime != that.finishTime)
        return false;
    }

    boolean this_present_objectiveRoutineId = true && this.isSetObjectiveRoutineId();
    boolean that_present_objectiveRoutineId = true && that.isSetObjectiveRoutineId();
    if (this_present_objectiveRoutineId || that_present_objectiveRoutineId) {
      if (!(this_present_objectiveRoutineId && that_present_objectiveRoutineId))
        return false;
      if (!this.objectiveRoutineId.equals(that.objectiveRoutineId))
        return false;
    }

    boolean this_present_mapRoutineId = true && this.isSetMapRoutineId();
    boolean that_present_mapRoutineId = true && that.isSetMapRoutineId();
    if (this_present_mapRoutineId || that_present_mapRoutineId) {
      if (!(this_present_mapRoutineId && that_present_mapRoutineId))
        return false;
      if (!this.mapRoutineId.equals(that.mapRoutineId))
        return false;
    }

    boolean this_present_inParameters = true && this.isSetInParameters();
    boolean that_present_inParameters = true && that.isSetInParameters();
    if (this_present_inParameters || that_present_inParameters) {
      if (!(this_present_inParameters && that_present_inParameters))
        return false;
      if (!this.inParameters.equals(that.inParameters))
        return false;
    }

    boolean this_present_outParameters = true && this.isSetOutParameters();
    boolean that_present_outParameters = true && that.isSetOutParameters();
    if (this_present_outParameters || that_present_outParameters) {
      if (!(this_present_outParameters && that_present_outParameters))
        return false;
      if (!this.outParameters.equals(that.outParameters))
        return false;
    }

    boolean this_present_messages = true && this.isSetMessages();
    boolean that_present_messages = true && that.isSetMessages();
    if (this_present_messages || that_present_messages) {
      if (!(this_present_messages && that_present_messages))
        return false;
      if (!this.messages.equals(that.messages))
        return false;
    }

    boolean this_present_runtime = true;
    boolean that_present_runtime = true;
    if (this_present_runtime || that_present_runtime) {
      if (!(this_present_runtime && that_present_runtime))
        return false;
      if (this.runtime != that.runtime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobId()) ? 131071 : 524287);
    if (isSetJobId())
      hashCode = hashCode * 8191 + jobId.hashCode();

    hashCode = hashCode * 8191 + ((isSetProgramId()) ? 131071 : 524287);
    if (isSetProgramId())
      hashCode = hashCode * 8191 + programId.hashCode();

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + state.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(finishTime);

    hashCode = hashCode * 8191 + ((isSetObjectiveRoutineId()) ? 131071 : 524287);
    if (isSetObjectiveRoutineId())
      hashCode = hashCode * 8191 + objectiveRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetMapRoutineId()) ? 131071 : 524287);
    if (isSetMapRoutineId())
      hashCode = hashCode * 8191 + mapRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetInParameters()) ? 131071 : 524287);
    if (isSetInParameters())
      hashCode = hashCode * 8191 + inParameters.hashCode();

    hashCode = hashCode * 8191 + ((isSetOutParameters()) ? 131071 : 524287);
    if (isSetOutParameters())
      hashCode = hashCode * 8191 + outParameters.hashCode();

    hashCode = hashCode * 8191 + ((isSetMessages()) ? 131071 : 524287);
    if (isSetMessages())
      hashCode = hashCode * 8191 + messages.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(runtime);

    return hashCode;
  }

  @Override
  public int compareTo(TaskDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJobId()).compareTo(other.isSetJobId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobId, other.jobId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProgramId()).compareTo(other.isSetProgramId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProgramId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.programId, other.programId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetState()).compareTo(other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFinishTime()).compareTo(other.isSetFinishTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinishTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finishTime, other.finishTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetObjectiveRoutineId()).compareTo(other.isSetObjectiveRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectiveRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectiveRoutineId, other.objectiveRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMapRoutineId()).compareTo(other.isSetMapRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMapRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mapRoutineId, other.mapRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInParameters()).compareTo(other.isSetInParameters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInParameters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inParameters, other.inParameters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOutParameters()).compareTo(other.isSetOutParameters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutParameters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outParameters, other.outParameters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessages()).compareTo(other.isSetMessages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessages()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messages, other.messages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRuntime()).compareTo(other.isSetRuntime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRuntime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.runtime, other.runtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TaskDTO(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobId:");
    if (this.jobId == null) {
      sb.append("null");
    } else {
      sb.append(this.jobId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("programId:");
    if (this.programId == null) {
      sb.append("null");
    } else {
      sb.append(this.programId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("state:");
    if (this.state == null) {
      sb.append("null");
    } else {
      sb.append(this.state);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("finishTime:");
    sb.append(this.finishTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("objectiveRoutineId:");
    if (this.objectiveRoutineId == null) {
      sb.append("null");
    } else {
      sb.append(this.objectiveRoutineId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mapRoutineId:");
    if (this.mapRoutineId == null) {
      sb.append("null");
    } else {
      sb.append(this.mapRoutineId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("inParameters:");
    if (this.inParameters == null) {
      sb.append("null");
    } else {
      sb.append(this.inParameters);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("outParameters:");
    if (this.outParameters == null) {
      sb.append("null");
    } else {
      sb.append(this.outParameters);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messages:");
    if (this.messages == null) {
      sb.append("null");
    } else {
      sb.append(this.messages);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("runtime:");
    sb.append(this.runtime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TaskDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TaskDTOStandardScheme getScheme() {
      return new TaskDTOStandardScheme();
    }
  }

  private static class TaskDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<TaskDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TaskDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // JOB_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jobId = iprot.readString();
              struct.setJobIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROGRAM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.programId = iprot.readString();
              struct.setProgramIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = at.enfilo.def.transfer.dto.ExecutionState.findByValue(iprot.readI32());
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FINISH_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.finishTime = iprot.readI64();
              struct.setFinishTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OBJECTIVE_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.objectiveRoutineId = iprot.readString();
              struct.setObjectiveRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MAP_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mapRoutineId = iprot.readString();
              struct.setMapRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IN_PARAMETERS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map8 = iprot.readMapBegin();
                struct.inParameters = new java.util.HashMap<java.lang.String,ResourceDTO>(2*_map8.size);
                java.lang.String _key9;
                ResourceDTO _val10;
                for (int _i11 = 0; _i11 < _map8.size; ++_i11)
                {
                  _key9 = iprot.readString();
                  _val10 = new ResourceDTO();
                  _val10.read(iprot);
                  struct.inParameters.put(_key9, _val10);
                }
                iprot.readMapEnd();
              }
              struct.setInParametersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OUT_PARAMETERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.outParameters = new java.util.ArrayList<ResourceDTO>(_list12.size);
                ResourceDTO _elem13;
                for (int _i14 = 0; _i14 < _list12.size; ++_i14)
                {
                  _elem13 = new ResourceDTO();
                  _elem13.read(iprot);
                  struct.outParameters.add(_elem13);
                }
                iprot.readListEnd();
              }
              struct.setOutParametersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MESSAGES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list15 = iprot.readListBegin();
                struct.messages = new java.util.ArrayList<java.lang.String>(_list15.size);
                java.lang.String _elem16;
                for (int _i17 = 0; _i17 < _list15.size; ++_i17)
                {
                  _elem16 = iprot.readString();
                  struct.messages.add(_elem16);
                }
                iprot.readListEnd();
              }
              struct.setMessagesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // RUNTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.runtime = iprot.readI64();
              struct.setRuntimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TaskDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.jobId != null) {
        oprot.writeFieldBegin(JOB_ID_FIELD_DESC);
        oprot.writeString(struct.jobId);
        oprot.writeFieldEnd();
      }
      if (struct.programId != null) {
        oprot.writeFieldBegin(PROGRAM_ID_FIELD_DESC);
        oprot.writeString(struct.programId);
        oprot.writeFieldEnd();
      }
      if (struct.state != null) {
        oprot.writeFieldBegin(STATE_FIELD_DESC);
        oprot.writeI32(struct.state.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_TIME_FIELD_DESC);
      oprot.writeI64(struct.finishTime);
      oprot.writeFieldEnd();
      if (struct.objectiveRoutineId != null) {
        oprot.writeFieldBegin(OBJECTIVE_ROUTINE_ID_FIELD_DESC);
        oprot.writeString(struct.objectiveRoutineId);
        oprot.writeFieldEnd();
      }
      if (struct.mapRoutineId != null) {
        oprot.writeFieldBegin(MAP_ROUTINE_ID_FIELD_DESC);
        oprot.writeString(struct.mapRoutineId);
        oprot.writeFieldEnd();
      }
      if (struct.inParameters != null) {
        oprot.writeFieldBegin(IN_PARAMETERS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.inParameters.size()));
          for (java.util.Map.Entry<java.lang.String, ResourceDTO> _iter18 : struct.inParameters.entrySet())
          {
            oprot.writeString(_iter18.getKey());
            _iter18.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.outParameters != null) {
        oprot.writeFieldBegin(OUT_PARAMETERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.outParameters.size()));
          for (ResourceDTO _iter19 : struct.outParameters)
          {
            _iter19.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.messages != null) {
        oprot.writeFieldBegin(MESSAGES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.messages.size()));
          for (java.lang.String _iter20 : struct.messages)
          {
            oprot.writeString(_iter20);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RUNTIME_FIELD_DESC);
      oprot.writeI64(struct.runtime);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TaskDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TaskDTOTupleScheme getScheme() {
      return new TaskDTOTupleScheme();
    }
  }

  private static class TaskDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<TaskDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TaskDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetJobId()) {
        optionals.set(1);
      }
      if (struct.isSetProgramId()) {
        optionals.set(2);
      }
      if (struct.isSetState()) {
        optionals.set(3);
      }
      if (struct.isSetStartTime()) {
        optionals.set(4);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(5);
      }
      if (struct.isSetFinishTime()) {
        optionals.set(6);
      }
      if (struct.isSetObjectiveRoutineId()) {
        optionals.set(7);
      }
      if (struct.isSetMapRoutineId()) {
        optionals.set(8);
      }
      if (struct.isSetInParameters()) {
        optionals.set(9);
      }
      if (struct.isSetOutParameters()) {
        optionals.set(10);
      }
      if (struct.isSetMessages()) {
        optionals.set(11);
      }
      if (struct.isSetRuntime()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetJobId()) {
        oprot.writeString(struct.jobId);
      }
      if (struct.isSetProgramId()) {
        oprot.writeString(struct.programId);
      }
      if (struct.isSetState()) {
        oprot.writeI32(struct.state.getValue());
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetFinishTime()) {
        oprot.writeI64(struct.finishTime);
      }
      if (struct.isSetObjectiveRoutineId()) {
        oprot.writeString(struct.objectiveRoutineId);
      }
      if (struct.isSetMapRoutineId()) {
        oprot.writeString(struct.mapRoutineId);
      }
      if (struct.isSetInParameters()) {
        {
          oprot.writeI32(struct.inParameters.size());
          for (java.util.Map.Entry<java.lang.String, ResourceDTO> _iter21 : struct.inParameters.entrySet())
          {
            oprot.writeString(_iter21.getKey());
            _iter21.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetOutParameters()) {
        {
          oprot.writeI32(struct.outParameters.size());
          for (ResourceDTO _iter22 : struct.outParameters)
          {
            _iter22.write(oprot);
          }
        }
      }
      if (struct.isSetMessages()) {
        {
          oprot.writeI32(struct.messages.size());
          for (java.lang.String _iter23 : struct.messages)
          {
            oprot.writeString(_iter23);
          }
        }
      }
      if (struct.isSetRuntime()) {
        oprot.writeI64(struct.runtime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TaskDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.jobId = iprot.readString();
        struct.setJobIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.programId = iprot.readString();
        struct.setProgramIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.state = at.enfilo.def.transfer.dto.ExecutionState.findByValue(iprot.readI32());
        struct.setStateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.finishTime = iprot.readI64();
        struct.setFinishTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.objectiveRoutineId = iprot.readString();
        struct.setObjectiveRoutineIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.mapRoutineId = iprot.readString();
        struct.setMapRoutineIdIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TMap _map24 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.inParameters = new java.util.HashMap<java.lang.String,ResourceDTO>(2*_map24.size);
          java.lang.String _key25;
          ResourceDTO _val26;
          for (int _i27 = 0; _i27 < _map24.size; ++_i27)
          {
            _key25 = iprot.readString();
            _val26 = new ResourceDTO();
            _val26.read(iprot);
            struct.inParameters.put(_key25, _val26);
          }
        }
        struct.setInParametersIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list28 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.outParameters = new java.util.ArrayList<ResourceDTO>(_list28.size);
          ResourceDTO _elem29;
          for (int _i30 = 0; _i30 < _list28.size; ++_i30)
          {
            _elem29 = new ResourceDTO();
            _elem29.read(iprot);
            struct.outParameters.add(_elem29);
          }
        }
        struct.setOutParametersIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TList _list31 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.messages = new java.util.ArrayList<java.lang.String>(_list31.size);
          java.lang.String _elem32;
          for (int _i33 = 0; _i33 < _list31.size; ++_i33)
          {
            _elem32 = iprot.readString();
            struct.messages.add(_elem32);
          }
        }
        struct.setMessagesIsSet(true);
      }
      if (incoming.get(12)) {
        struct.runtime = iprot.readI64();
        struct.setRuntimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

