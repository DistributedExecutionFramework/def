/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package at.enfilo.def.transfer.dto;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-08-13")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ClusterInfoDTO implements org.apache.thrift.TBase<ClusterInfoDTO, ClusterInfoDTO._Fields>, java.io.Serializable, Cloneable, Comparable<ClusterInfoDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ClusterInfoDTO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MANAGER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("managerId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CLOUD_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("cloudType", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField ACTIVE_PROGRAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("activePrograms", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField NUMBER_OF_WORKERS_FIELD_DESC = new org.apache.thrift.protocol.TField("numberOfWorkers", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField NUMBER_OF_REDUCERS_FIELD_DESC = new org.apache.thrift.protocol.TField("numberOfReducers", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField DEFAULT_MAP_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("defaultMapRoutineId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STORE_ROUTINE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("storeRoutineId", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("host", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ClusterInfoDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ClusterInfoDTOTupleSchemeFactory();

  private java.lang.String id; // required
  private java.lang.String name; // required
  private java.lang.String managerId; // required
  private CloudType cloudType; // required
  private long startTime; // required
  private java.util.List<java.lang.String> activePrograms; // required
  private int numberOfWorkers; // required
  private int numberOfReducers; // required
  private java.lang.String defaultMapRoutineId; // required
  private java.lang.String storeRoutineId; // required
  private java.lang.String host; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    MANAGER_ID((short)3, "managerId"),
    /**
     * 
     * @see CloudType
     */
    CLOUD_TYPE((short)4, "cloudType"),
    START_TIME((short)5, "startTime"),
    ACTIVE_PROGRAMS((short)6, "activePrograms"),
    NUMBER_OF_WORKERS((short)7, "numberOfWorkers"),
    NUMBER_OF_REDUCERS((short)8, "numberOfReducers"),
    DEFAULT_MAP_ROUTINE_ID((short)9, "defaultMapRoutineId"),
    STORE_ROUTINE_ID((short)10, "storeRoutineId"),
    HOST((short)11, "host");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // MANAGER_ID
          return MANAGER_ID;
        case 4: // CLOUD_TYPE
          return CLOUD_TYPE;
        case 5: // START_TIME
          return START_TIME;
        case 6: // ACTIVE_PROGRAMS
          return ACTIVE_PROGRAMS;
        case 7: // NUMBER_OF_WORKERS
          return NUMBER_OF_WORKERS;
        case 8: // NUMBER_OF_REDUCERS
          return NUMBER_OF_REDUCERS;
        case 9: // DEFAULT_MAP_ROUTINE_ID
          return DEFAULT_MAP_ROUTINE_ID;
        case 10: // STORE_ROUTINE_ID
          return STORE_ROUTINE_ID;
        case 11: // HOST
          return HOST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STARTTIME_ISSET_ID = 0;
  private static final int __NUMBEROFWORKERS_ISSET_ID = 1;
  private static final int __NUMBEROFREDUCERS_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MANAGER_ID, new org.apache.thrift.meta_data.FieldMetaData("managerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.CLOUD_TYPE, new org.apache.thrift.meta_data.FieldMetaData("cloudType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, CloudType.class)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACTIVE_PROGRAMS, new org.apache.thrift.meta_data.FieldMetaData("activePrograms", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.NUMBER_OF_WORKERS, new org.apache.thrift.meta_data.FieldMetaData("numberOfWorkers", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER_OF_REDUCERS, new org.apache.thrift.meta_data.FieldMetaData("numberOfReducers", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEFAULT_MAP_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("defaultMapRoutineId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.STORE_ROUTINE_ID, new org.apache.thrift.meta_data.FieldMetaData("storeRoutineId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Id")));
    tmpMap.put(_Fields.HOST, new org.apache.thrift.meta_data.FieldMetaData("host", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ClusterInfoDTO.class, metaDataMap);
  }

  public ClusterInfoDTO() {
  }

  public ClusterInfoDTO(
    java.lang.String id,
    java.lang.String name,
    java.lang.String managerId,
    CloudType cloudType,
    long startTime,
    java.util.List<java.lang.String> activePrograms,
    int numberOfWorkers,
    int numberOfReducers,
    java.lang.String defaultMapRoutineId,
    java.lang.String storeRoutineId,
    java.lang.String host)
  {
    this();
    this.id = id;
    this.name = name;
    this.managerId = managerId;
    this.cloudType = cloudType;
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.activePrograms = activePrograms;
    this.numberOfWorkers = numberOfWorkers;
    setNumberOfWorkersIsSet(true);
    this.numberOfReducers = numberOfReducers;
    setNumberOfReducersIsSet(true);
    this.defaultMapRoutineId = defaultMapRoutineId;
    this.storeRoutineId = storeRoutineId;
    this.host = host;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ClusterInfoDTO(ClusterInfoDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetManagerId()) {
      this.managerId = other.managerId;
    }
    if (other.isSetCloudType()) {
      this.cloudType = other.cloudType;
    }
    this.startTime = other.startTime;
    if (other.isSetActivePrograms()) {
      java.util.List<java.lang.String> __this__activePrograms = new java.util.ArrayList<java.lang.String>(other.activePrograms);
      this.activePrograms = __this__activePrograms;
    }
    this.numberOfWorkers = other.numberOfWorkers;
    this.numberOfReducers = other.numberOfReducers;
    if (other.isSetDefaultMapRoutineId()) {
      this.defaultMapRoutineId = other.defaultMapRoutineId;
    }
    if (other.isSetStoreRoutineId()) {
      this.storeRoutineId = other.storeRoutineId;
    }
    if (other.isSetHost()) {
      this.host = other.host;
    }
  }

  public ClusterInfoDTO deepCopy() {
    return new ClusterInfoDTO(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.name = null;
    this.managerId = null;
    this.cloudType = null;
    setStartTimeIsSet(false);
    this.startTime = 0;
    this.activePrograms = null;
    setNumberOfWorkersIsSet(false);
    this.numberOfWorkers = 0;
    setNumberOfReducersIsSet(false);
    this.numberOfReducers = 0;
    this.defaultMapRoutineId = null;
    this.storeRoutineId = null;
    this.host = null;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public void setId(java.lang.String id) {
    this.id = id;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getName() {
    return this.name;
  }

  public void setName(java.lang.String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getManagerId() {
    return this.managerId;
  }

  public void setManagerId(java.lang.String managerId) {
    this.managerId = managerId;
  }

  public void unsetManagerId() {
    this.managerId = null;
  }

  /** Returns true if field managerId is set (has been assigned a value) and false otherwise */
  public boolean isSetManagerId() {
    return this.managerId != null;
  }

  public void setManagerIdIsSet(boolean value) {
    if (!value) {
      this.managerId = null;
    }
  }

  /**
   * 
   * @see CloudType
   */
  public CloudType getCloudType() {
    return this.cloudType;
  }

  /**
   * 
   * @see CloudType
   */
  public void setCloudType(CloudType cloudType) {
    this.cloudType = cloudType;
  }

  public void unsetCloudType() {
    this.cloudType = null;
  }

  /** Returns true if field cloudType is set (has been assigned a value) and false otherwise */
  public boolean isSetCloudType() {
    return this.cloudType != null;
  }

  public void setCloudTypeIsSet(boolean value) {
    if (!value) {
      this.cloudType = null;
    }
  }

  public long getStartTime() {
    return this.startTime;
  }

  public void setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public int getActiveProgramsSize() {
    return (this.activePrograms == null) ? 0 : this.activePrograms.size();
  }

  public java.util.Iterator<java.lang.String> getActiveProgramsIterator() {
    return (this.activePrograms == null) ? null : this.activePrograms.iterator();
  }

  public void addToActivePrograms(java.lang.String elem) {
    if (this.activePrograms == null) {
      this.activePrograms = new java.util.ArrayList<java.lang.String>();
    }
    this.activePrograms.add(elem);
  }

  public java.util.List<java.lang.String> getActivePrograms() {
    return this.activePrograms;
  }

  public void setActivePrograms(java.util.List<java.lang.String> activePrograms) {
    this.activePrograms = activePrograms;
  }

  public void unsetActivePrograms() {
    this.activePrograms = null;
  }

  /** Returns true if field activePrograms is set (has been assigned a value) and false otherwise */
  public boolean isSetActivePrograms() {
    return this.activePrograms != null;
  }

  public void setActiveProgramsIsSet(boolean value) {
    if (!value) {
      this.activePrograms = null;
    }
  }

  public int getNumberOfWorkers() {
    return this.numberOfWorkers;
  }

  public void setNumberOfWorkers(int numberOfWorkers) {
    this.numberOfWorkers = numberOfWorkers;
    setNumberOfWorkersIsSet(true);
  }

  public void unsetNumberOfWorkers() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBEROFWORKERS_ISSET_ID);
  }

  /** Returns true if field numberOfWorkers is set (has been assigned a value) and false otherwise */
  public boolean isSetNumberOfWorkers() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBEROFWORKERS_ISSET_ID);
  }

  public void setNumberOfWorkersIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBEROFWORKERS_ISSET_ID, value);
  }

  public int getNumberOfReducers() {
    return this.numberOfReducers;
  }

  public void setNumberOfReducers(int numberOfReducers) {
    this.numberOfReducers = numberOfReducers;
    setNumberOfReducersIsSet(true);
  }

  public void unsetNumberOfReducers() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBEROFREDUCERS_ISSET_ID);
  }

  /** Returns true if field numberOfReducers is set (has been assigned a value) and false otherwise */
  public boolean isSetNumberOfReducers() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBEROFREDUCERS_ISSET_ID);
  }

  public void setNumberOfReducersIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBEROFREDUCERS_ISSET_ID, value);
  }

  public java.lang.String getDefaultMapRoutineId() {
    return this.defaultMapRoutineId;
  }

  public void setDefaultMapRoutineId(java.lang.String defaultMapRoutineId) {
    this.defaultMapRoutineId = defaultMapRoutineId;
  }

  public void unsetDefaultMapRoutineId() {
    this.defaultMapRoutineId = null;
  }

  /** Returns true if field defaultMapRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultMapRoutineId() {
    return this.defaultMapRoutineId != null;
  }

  public void setDefaultMapRoutineIdIsSet(boolean value) {
    if (!value) {
      this.defaultMapRoutineId = null;
    }
  }

  public java.lang.String getStoreRoutineId() {
    return this.storeRoutineId;
  }

  public void setStoreRoutineId(java.lang.String storeRoutineId) {
    this.storeRoutineId = storeRoutineId;
  }

  public void unsetStoreRoutineId() {
    this.storeRoutineId = null;
  }

  /** Returns true if field storeRoutineId is set (has been assigned a value) and false otherwise */
  public boolean isSetStoreRoutineId() {
    return this.storeRoutineId != null;
  }

  public void setStoreRoutineIdIsSet(boolean value) {
    if (!value) {
      this.storeRoutineId = null;
    }
  }

  public java.lang.String getHost() {
    return this.host;
  }

  public void setHost(java.lang.String host) {
    this.host = host;
  }

  public void unsetHost() {
    this.host = null;
  }

  /** Returns true if field host is set (has been assigned a value) and false otherwise */
  public boolean isSetHost() {
    return this.host != null;
  }

  public void setHostIsSet(boolean value) {
    if (!value) {
      this.host = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case MANAGER_ID:
      if (value == null) {
        unsetManagerId();
      } else {
        setManagerId((java.lang.String)value);
      }
      break;

    case CLOUD_TYPE:
      if (value == null) {
        unsetCloudType();
      } else {
        setCloudType((CloudType)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case ACTIVE_PROGRAMS:
      if (value == null) {
        unsetActivePrograms();
      } else {
        setActivePrograms((java.util.List<java.lang.String>)value);
      }
      break;

    case NUMBER_OF_WORKERS:
      if (value == null) {
        unsetNumberOfWorkers();
      } else {
        setNumberOfWorkers((java.lang.Integer)value);
      }
      break;

    case NUMBER_OF_REDUCERS:
      if (value == null) {
        unsetNumberOfReducers();
      } else {
        setNumberOfReducers((java.lang.Integer)value);
      }
      break;

    case DEFAULT_MAP_ROUTINE_ID:
      if (value == null) {
        unsetDefaultMapRoutineId();
      } else {
        setDefaultMapRoutineId((java.lang.String)value);
      }
      break;

    case STORE_ROUTINE_ID:
      if (value == null) {
        unsetStoreRoutineId();
      } else {
        setStoreRoutineId((java.lang.String)value);
      }
      break;

    case HOST:
      if (value == null) {
        unsetHost();
      } else {
        setHost((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case MANAGER_ID:
      return getManagerId();

    case CLOUD_TYPE:
      return getCloudType();

    case START_TIME:
      return getStartTime();

    case ACTIVE_PROGRAMS:
      return getActivePrograms();

    case NUMBER_OF_WORKERS:
      return getNumberOfWorkers();

    case NUMBER_OF_REDUCERS:
      return getNumberOfReducers();

    case DEFAULT_MAP_ROUTINE_ID:
      return getDefaultMapRoutineId();

    case STORE_ROUTINE_ID:
      return getStoreRoutineId();

    case HOST:
      return getHost();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case MANAGER_ID:
      return isSetManagerId();
    case CLOUD_TYPE:
      return isSetCloudType();
    case START_TIME:
      return isSetStartTime();
    case ACTIVE_PROGRAMS:
      return isSetActivePrograms();
    case NUMBER_OF_WORKERS:
      return isSetNumberOfWorkers();
    case NUMBER_OF_REDUCERS:
      return isSetNumberOfReducers();
    case DEFAULT_MAP_ROUTINE_ID:
      return isSetDefaultMapRoutineId();
    case STORE_ROUTINE_ID:
      return isSetStoreRoutineId();
    case HOST:
      return isSetHost();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof ClusterInfoDTO)
      return this.equals((ClusterInfoDTO)that);
    return false;
  }

  public boolean equals(ClusterInfoDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_managerId = true && this.isSetManagerId();
    boolean that_present_managerId = true && that.isSetManagerId();
    if (this_present_managerId || that_present_managerId) {
      if (!(this_present_managerId && that_present_managerId))
        return false;
      if (!this.managerId.equals(that.managerId))
        return false;
    }

    boolean this_present_cloudType = true && this.isSetCloudType();
    boolean that_present_cloudType = true && that.isSetCloudType();
    if (this_present_cloudType || that_present_cloudType) {
      if (!(this_present_cloudType && that_present_cloudType))
        return false;
      if (!this.cloudType.equals(that.cloudType))
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_activePrograms = true && this.isSetActivePrograms();
    boolean that_present_activePrograms = true && that.isSetActivePrograms();
    if (this_present_activePrograms || that_present_activePrograms) {
      if (!(this_present_activePrograms && that_present_activePrograms))
        return false;
      if (!this.activePrograms.equals(that.activePrograms))
        return false;
    }

    boolean this_present_numberOfWorkers = true;
    boolean that_present_numberOfWorkers = true;
    if (this_present_numberOfWorkers || that_present_numberOfWorkers) {
      if (!(this_present_numberOfWorkers && that_present_numberOfWorkers))
        return false;
      if (this.numberOfWorkers != that.numberOfWorkers)
        return false;
    }

    boolean this_present_numberOfReducers = true;
    boolean that_present_numberOfReducers = true;
    if (this_present_numberOfReducers || that_present_numberOfReducers) {
      if (!(this_present_numberOfReducers && that_present_numberOfReducers))
        return false;
      if (this.numberOfReducers != that.numberOfReducers)
        return false;
    }

    boolean this_present_defaultMapRoutineId = true && this.isSetDefaultMapRoutineId();
    boolean that_present_defaultMapRoutineId = true && that.isSetDefaultMapRoutineId();
    if (this_present_defaultMapRoutineId || that_present_defaultMapRoutineId) {
      if (!(this_present_defaultMapRoutineId && that_present_defaultMapRoutineId))
        return false;
      if (!this.defaultMapRoutineId.equals(that.defaultMapRoutineId))
        return false;
    }

    boolean this_present_storeRoutineId = true && this.isSetStoreRoutineId();
    boolean that_present_storeRoutineId = true && that.isSetStoreRoutineId();
    if (this_present_storeRoutineId || that_present_storeRoutineId) {
      if (!(this_present_storeRoutineId && that_present_storeRoutineId))
        return false;
      if (!this.storeRoutineId.equals(that.storeRoutineId))
        return false;
    }

    boolean this_present_host = true && this.isSetHost();
    boolean that_present_host = true && that.isSetHost();
    if (this_present_host || that_present_host) {
      if (!(this_present_host && that_present_host))
        return false;
      if (!this.host.equals(that.host))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetManagerId()) ? 131071 : 524287);
    if (isSetManagerId())
      hashCode = hashCode * 8191 + managerId.hashCode();

    hashCode = hashCode * 8191 + ((isSetCloudType()) ? 131071 : 524287);
    if (isSetCloudType())
      hashCode = hashCode * 8191 + cloudType.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + ((isSetActivePrograms()) ? 131071 : 524287);
    if (isSetActivePrograms())
      hashCode = hashCode * 8191 + activePrograms.hashCode();

    hashCode = hashCode * 8191 + numberOfWorkers;

    hashCode = hashCode * 8191 + numberOfReducers;

    hashCode = hashCode * 8191 + ((isSetDefaultMapRoutineId()) ? 131071 : 524287);
    if (isSetDefaultMapRoutineId())
      hashCode = hashCode * 8191 + defaultMapRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetStoreRoutineId()) ? 131071 : 524287);
    if (isSetStoreRoutineId())
      hashCode = hashCode * 8191 + storeRoutineId.hashCode();

    hashCode = hashCode * 8191 + ((isSetHost()) ? 131071 : 524287);
    if (isSetHost())
      hashCode = hashCode * 8191 + host.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ClusterInfoDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetManagerId()).compareTo(other.isSetManagerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetManagerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.managerId, other.managerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCloudType()).compareTo(other.isSetCloudType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCloudType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cloudType, other.cloudType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetActivePrograms()).compareTo(other.isSetActivePrograms());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivePrograms()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.activePrograms, other.activePrograms);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumberOfWorkers()).compareTo(other.isSetNumberOfWorkers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumberOfWorkers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberOfWorkers, other.numberOfWorkers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumberOfReducers()).compareTo(other.isSetNumberOfReducers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumberOfReducers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberOfReducers, other.numberOfReducers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDefaultMapRoutineId()).compareTo(other.isSetDefaultMapRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultMapRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.defaultMapRoutineId, other.defaultMapRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStoreRoutineId()).compareTo(other.isSetStoreRoutineId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreRoutineId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storeRoutineId, other.storeRoutineId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHost()).compareTo(other.isSetHost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.host, other.host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ClusterInfoDTO(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("managerId:");
    if (this.managerId == null) {
      sb.append("null");
    } else {
      sb.append(this.managerId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cloudType:");
    if (this.cloudType == null) {
      sb.append("null");
    } else {
      sb.append(this.cloudType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("activePrograms:");
    if (this.activePrograms == null) {
      sb.append("null");
    } else {
      sb.append(this.activePrograms);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numberOfWorkers:");
    sb.append(this.numberOfWorkers);
    first = false;
    if (!first) sb.append(", ");
    sb.append("numberOfReducers:");
    sb.append(this.numberOfReducers);
    first = false;
    if (!first) sb.append(", ");
    sb.append("defaultMapRoutineId:");
    if (this.defaultMapRoutineId == null) {
      sb.append("null");
    } else {
      sb.append(this.defaultMapRoutineId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("storeRoutineId:");
    if (this.storeRoutineId == null) {
      sb.append("null");
    } else {
      sb.append(this.storeRoutineId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("host:");
    if (this.host == null) {
      sb.append("null");
    } else {
      sb.append(this.host);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ClusterInfoDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ClusterInfoDTOStandardScheme getScheme() {
      return new ClusterInfoDTOStandardScheme();
    }
  }

  private static class ClusterInfoDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<ClusterInfoDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ClusterInfoDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MANAGER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.managerId = iprot.readString();
              struct.setManagerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CLOUD_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cloudType = at.enfilo.def.transfer.dto.CloudType.findByValue(iprot.readI32());
              struct.setCloudTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ACTIVE_PROGRAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list118 = iprot.readListBegin();
                struct.activePrograms = new java.util.ArrayList<java.lang.String>(_list118.size);
                java.lang.String _elem119;
                for (int _i120 = 0; _i120 < _list118.size; ++_i120)
                {
                  _elem119 = iprot.readString();
                  struct.activePrograms.add(_elem119);
                }
                iprot.readListEnd();
              }
              struct.setActiveProgramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NUMBER_OF_WORKERS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numberOfWorkers = iprot.readI32();
              struct.setNumberOfWorkersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NUMBER_OF_REDUCERS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numberOfReducers = iprot.readI32();
              struct.setNumberOfReducersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DEFAULT_MAP_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.defaultMapRoutineId = iprot.readString();
              struct.setDefaultMapRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STORE_ROUTINE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.storeRoutineId = iprot.readString();
              struct.setStoreRoutineIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.host = iprot.readString();
              struct.setHostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ClusterInfoDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.managerId != null) {
        oprot.writeFieldBegin(MANAGER_ID_FIELD_DESC);
        oprot.writeString(struct.managerId);
        oprot.writeFieldEnd();
      }
      if (struct.cloudType != null) {
        oprot.writeFieldBegin(CLOUD_TYPE_FIELD_DESC);
        oprot.writeI32(struct.cloudType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      if (struct.activePrograms != null) {
        oprot.writeFieldBegin(ACTIVE_PROGRAMS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.activePrograms.size()));
          for (java.lang.String _iter121 : struct.activePrograms)
          {
            oprot.writeString(_iter121);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NUMBER_OF_WORKERS_FIELD_DESC);
      oprot.writeI32(struct.numberOfWorkers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER_OF_REDUCERS_FIELD_DESC);
      oprot.writeI32(struct.numberOfReducers);
      oprot.writeFieldEnd();
      if (struct.defaultMapRoutineId != null) {
        oprot.writeFieldBegin(DEFAULT_MAP_ROUTINE_ID_FIELD_DESC);
        oprot.writeString(struct.defaultMapRoutineId);
        oprot.writeFieldEnd();
      }
      if (struct.storeRoutineId != null) {
        oprot.writeFieldBegin(STORE_ROUTINE_ID_FIELD_DESC);
        oprot.writeString(struct.storeRoutineId);
        oprot.writeFieldEnd();
      }
      if (struct.host != null) {
        oprot.writeFieldBegin(HOST_FIELD_DESC);
        oprot.writeString(struct.host);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ClusterInfoDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ClusterInfoDTOTupleScheme getScheme() {
      return new ClusterInfoDTOTupleScheme();
    }
  }

  private static class ClusterInfoDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<ClusterInfoDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ClusterInfoDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetManagerId()) {
        optionals.set(2);
      }
      if (struct.isSetCloudType()) {
        optionals.set(3);
      }
      if (struct.isSetStartTime()) {
        optionals.set(4);
      }
      if (struct.isSetActivePrograms()) {
        optionals.set(5);
      }
      if (struct.isSetNumberOfWorkers()) {
        optionals.set(6);
      }
      if (struct.isSetNumberOfReducers()) {
        optionals.set(7);
      }
      if (struct.isSetDefaultMapRoutineId()) {
        optionals.set(8);
      }
      if (struct.isSetStoreRoutineId()) {
        optionals.set(9);
      }
      if (struct.isSetHost()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetManagerId()) {
        oprot.writeString(struct.managerId);
      }
      if (struct.isSetCloudType()) {
        oprot.writeI32(struct.cloudType.getValue());
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetActivePrograms()) {
        {
          oprot.writeI32(struct.activePrograms.size());
          for (java.lang.String _iter122 : struct.activePrograms)
          {
            oprot.writeString(_iter122);
          }
        }
      }
      if (struct.isSetNumberOfWorkers()) {
        oprot.writeI32(struct.numberOfWorkers);
      }
      if (struct.isSetNumberOfReducers()) {
        oprot.writeI32(struct.numberOfReducers);
      }
      if (struct.isSetDefaultMapRoutineId()) {
        oprot.writeString(struct.defaultMapRoutineId);
      }
      if (struct.isSetStoreRoutineId()) {
        oprot.writeString(struct.storeRoutineId);
      }
      if (struct.isSetHost()) {
        oprot.writeString(struct.host);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ClusterInfoDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.managerId = iprot.readString();
        struct.setManagerIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.cloudType = at.enfilo.def.transfer.dto.CloudType.findByValue(iprot.readI32());
        struct.setCloudTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list123 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.activePrograms = new java.util.ArrayList<java.lang.String>(_list123.size);
          java.lang.String _elem124;
          for (int _i125 = 0; _i125 < _list123.size; ++_i125)
          {
            _elem124 = iprot.readString();
            struct.activePrograms.add(_elem124);
          }
        }
        struct.setActiveProgramsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.numberOfWorkers = iprot.readI32();
        struct.setNumberOfWorkersIsSet(true);
      }
      if (incoming.get(7)) {
        struct.numberOfReducers = iprot.readI32();
        struct.setNumberOfReducersIsSet(true);
      }
      if (incoming.get(8)) {
        struct.defaultMapRoutineId = iprot.readString();
        struct.setDefaultMapRoutineIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.storeRoutineId = iprot.readString();
        struct.setStoreRoutineIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.host = iprot.readString();
        struct.setHostIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

